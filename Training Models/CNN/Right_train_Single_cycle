{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1UxnvXCy6WQC6Em_ylFy-zkGUiORYEoHn","authorship_tag":"ABX9TyO04prMLRWZtHn5I+eGRc5O"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"XhGKlPUBAwl2"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sn\n","\n","from sklearn.preprocessing import LabelEncoder\n","from imblearn.over_sampling import SMOTE\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","\n","\n","from tensorflow import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from sklearn.utils import shuffle\n","\n","\n","\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Conv1D, MaxPooling1D, Flatten\n","from tensorflow.keras.optimizers import Adam\n","\n","\n","import pickle\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"code","source":["data = pd.read_csv('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Dataset/Training_dataset_300.csv')\n"],"metadata":{"id":"im5AIL8sAyam"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WspHa_UMKpDT","executionInfo":{"status":"ok","timestamp":1723740715753,"user_tz":-360,"elapsed":51,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"7feb9c12-a42b-498c-93ff-57dbe871cf06"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2700, 15)"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["data['Label'] = data['Label'].replace({'DownLeft': 'Left', 'UpLeft': 'Left'})"],"metadata":{"id":"BTx2zNeWKs2s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['Label'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"i-jF4aysar2J","executionInfo":{"status":"ok","timestamp":1723740715753,"user_tz":-360,"elapsed":48,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"abf2152c-5293-47ab-c33f-e93c032a6293"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","Left         900\n","Blink        300\n","Right        300\n","UP           300\n","Down         300\n","UpRight      300\n","DownRight    300\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Left</th>\n","      <td>900</td>\n","    </tr>\n","    <tr>\n","      <th>Blink</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Right</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UP</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Down</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UpRight</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>DownRight</th>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# Shuffle the dataset\n","data= shuffle(data, random_state=32)\n","data.reset_index(drop=True, inplace=True)\n"],"metadata":{"id":"qDHty85OfA33"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['Label'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"oijTyzL8fsjs","executionInfo":{"status":"ok","timestamp":1723740715754,"user_tz":-360,"elapsed":47,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"eada8a97-f4d4-4cce-a3d1-fd399ea4ee96"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","Left         900\n","Down         300\n","Blink        300\n","DownRight    300\n","UP           300\n","Right        300\n","UpRight      300\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Left</th>\n","      <td>900</td>\n","    </tr>\n","    <tr>\n","      <th>Down</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Blink</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>DownRight</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UP</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Right</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UpRight</th>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["data_2 = data[data['Label'].isin(['Right','DownRight','UpRight', 'Left'])]\n","data_2.index = range(len(data_2))"],"metadata":{"id":"KXnY6h4QMAXK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"qJktiPGjc1Dr","executionInfo":{"status":"ok","timestamp":1723740715754,"user_tz":-360,"elapsed":43,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"bdfce2a4-c2e5-4f52-89fe-19bf8be66b45"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CH1_mean   CH1_max   CH1_min   CH1_std  CH1_skewness  CH1_kurtosis  \\\n","0     0.131127  0.126820 -0.469613  0.171179     -1.462237      0.790458   \n","1     0.205652  0.294938 -0.216920  0.216572      0.469844     -1.608772   \n","2     0.254094  0.310796 -0.353914  0.259533     -0.210908     -1.828207   \n","3     0.249511  0.327852 -0.292756  0.247518      0.666864     -1.298441   \n","4     0.264730  0.289746 -0.366226  0.274945      0.006185     -1.847014   \n","...        ...       ...       ...       ...           ...           ...   \n","1795  0.207822  0.285159 -0.282242  0.178906     -1.127872     -0.306198   \n","1796  0.161539  0.206156 -0.247351  0.171493     -0.333548     -1.617156   \n","1797  0.205732  0.269523 -0.315634  0.219490      0.205935     -1.614134   \n","1798  0.234015  0.375086 -0.294102  0.252604      0.255103     -1.610384   \n","1799  0.230862  0.375851 -0.294864  0.241297      0.812354     -0.979899   \n","\n","      Ch1_freq_dom  CH2_mean   CH2_max   CH2_min   CH2_std  CH2_skewness  \\\n","0         0.791391  0.102282  0.258542 -0.123654  0.117977      0.843805   \n","1         0.434028  0.180436  0.254829 -0.221195  0.189705      0.358811   \n","2         0.434028  0.028532  0.129203 -0.036015  0.042343      1.716800   \n","3         0.434028  0.118008  0.151814 -0.159330  0.108295     -0.970341   \n","4         0.434028  0.026913  0.054149 -0.043712  0.029575      0.099785   \n","...            ...       ...       ...       ...       ...           ...   \n","1795      0.000000  0.217722  0.360948 -0.323717  0.191531     -1.183554   \n","1796      0.434028  0.076716  0.094632 -0.128727  0.082164     -0.273398   \n","1797      0.868056  0.200325  0.273733 -0.295250  0.212940      0.183348   \n","1798      0.868056  0.185831  0.290728 -0.349023  0.206874     -0.537586   \n","1799      0.434028  0.037978  0.059553 -0.079003  0.042152     -0.058162   \n","\n","      CH2_kurtosis  CH2_freq_dom      Label  \n","0        -0.743303      1.046737       Left  \n","1        -1.663226      0.434028       Left  \n","2         2.035054      0.434028       Left  \n","3        -0.575828      0.094380  DownRight  \n","4        -1.328345      0.434028      Right  \n","...            ...           ...        ...  \n","1795      0.008754      0.000000       Left  \n","1796     -1.680210      0.434028    UpRight  \n","1797     -1.634766      0.868056       Left  \n","1798     -1.254741      0.868056  DownRight  \n","1799     -0.959357      0.434028       Left  \n","\n","[1800 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-4f4ddd86-9410-4d79-8ad9-67542b922977\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CH1_mean</th>\n","      <th>CH1_max</th>\n","      <th>CH1_min</th>\n","      <th>CH1_std</th>\n","      <th>CH1_skewness</th>\n","      <th>CH1_kurtosis</th>\n","      <th>Ch1_freq_dom</th>\n","      <th>CH2_mean</th>\n","      <th>CH2_max</th>\n","      <th>CH2_min</th>\n","      <th>CH2_std</th>\n","      <th>CH2_skewness</th>\n","      <th>CH2_kurtosis</th>\n","      <th>CH2_freq_dom</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.131127</td>\n","      <td>0.126820</td>\n","      <td>-0.469613</td>\n","      <td>0.171179</td>\n","      <td>-1.462237</td>\n","      <td>0.790458</td>\n","      <td>0.791391</td>\n","      <td>0.102282</td>\n","      <td>0.258542</td>\n","      <td>-0.123654</td>\n","      <td>0.117977</td>\n","      <td>0.843805</td>\n","      <td>-0.743303</td>\n","      <td>1.046737</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.205652</td>\n","      <td>0.294938</td>\n","      <td>-0.216920</td>\n","      <td>0.216572</td>\n","      <td>0.469844</td>\n","      <td>-1.608772</td>\n","      <td>0.434028</td>\n","      <td>0.180436</td>\n","      <td>0.254829</td>\n","      <td>-0.221195</td>\n","      <td>0.189705</td>\n","      <td>0.358811</td>\n","      <td>-1.663226</td>\n","      <td>0.434028</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.254094</td>\n","      <td>0.310796</td>\n","      <td>-0.353914</td>\n","      <td>0.259533</td>\n","      <td>-0.210908</td>\n","      <td>-1.828207</td>\n","      <td>0.434028</td>\n","      <td>0.028532</td>\n","      <td>0.129203</td>\n","      <td>-0.036015</td>\n","      <td>0.042343</td>\n","      <td>1.716800</td>\n","      <td>2.035054</td>\n","      <td>0.434028</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.249511</td>\n","      <td>0.327852</td>\n","      <td>-0.292756</td>\n","      <td>0.247518</td>\n","      <td>0.666864</td>\n","      <td>-1.298441</td>\n","      <td>0.434028</td>\n","      <td>0.118008</td>\n","      <td>0.151814</td>\n","      <td>-0.159330</td>\n","      <td>0.108295</td>\n","      <td>-0.970341</td>\n","      <td>-0.575828</td>\n","      <td>0.094380</td>\n","      <td>DownRight</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.264730</td>\n","      <td>0.289746</td>\n","      <td>-0.366226</td>\n","      <td>0.274945</td>\n","      <td>0.006185</td>\n","      <td>-1.847014</td>\n","      <td>0.434028</td>\n","      <td>0.026913</td>\n","      <td>0.054149</td>\n","      <td>-0.043712</td>\n","      <td>0.029575</td>\n","      <td>0.099785</td>\n","      <td>-1.328345</td>\n","      <td>0.434028</td>\n","      <td>Right</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1795</th>\n","      <td>0.207822</td>\n","      <td>0.285159</td>\n","      <td>-0.282242</td>\n","      <td>0.178906</td>\n","      <td>-1.127872</td>\n","      <td>-0.306198</td>\n","      <td>0.000000</td>\n","      <td>0.217722</td>\n","      <td>0.360948</td>\n","      <td>-0.323717</td>\n","      <td>0.191531</td>\n","      <td>-1.183554</td>\n","      <td>0.008754</td>\n","      <td>0.000000</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>1796</th>\n","      <td>0.161539</td>\n","      <td>0.206156</td>\n","      <td>-0.247351</td>\n","      <td>0.171493</td>\n","      <td>-0.333548</td>\n","      <td>-1.617156</td>\n","      <td>0.434028</td>\n","      <td>0.076716</td>\n","      <td>0.094632</td>\n","      <td>-0.128727</td>\n","      <td>0.082164</td>\n","      <td>-0.273398</td>\n","      <td>-1.680210</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>1797</th>\n","      <td>0.205732</td>\n","      <td>0.269523</td>\n","      <td>-0.315634</td>\n","      <td>0.219490</td>\n","      <td>0.205935</td>\n","      <td>-1.614134</td>\n","      <td>0.868056</td>\n","      <td>0.200325</td>\n","      <td>0.273733</td>\n","      <td>-0.295250</td>\n","      <td>0.212940</td>\n","      <td>0.183348</td>\n","      <td>-1.634766</td>\n","      <td>0.868056</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>1798</th>\n","      <td>0.234015</td>\n","      <td>0.375086</td>\n","      <td>-0.294102</td>\n","      <td>0.252604</td>\n","      <td>0.255103</td>\n","      <td>-1.610384</td>\n","      <td>0.868056</td>\n","      <td>0.185831</td>\n","      <td>0.290728</td>\n","      <td>-0.349023</td>\n","      <td>0.206874</td>\n","      <td>-0.537586</td>\n","      <td>-1.254741</td>\n","      <td>0.868056</td>\n","      <td>DownRight</td>\n","    </tr>\n","    <tr>\n","      <th>1799</th>\n","      <td>0.230862</td>\n","      <td>0.375851</td>\n","      <td>-0.294864</td>\n","      <td>0.241297</td>\n","      <td>0.812354</td>\n","      <td>-0.979899</td>\n","      <td>0.434028</td>\n","      <td>0.037978</td>\n","      <td>0.059553</td>\n","      <td>-0.079003</td>\n","      <td>0.042152</td>\n","      <td>-0.058162</td>\n","      <td>-0.959357</td>\n","      <td>0.434028</td>\n","      <td>Left</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1800 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f4ddd86-9410-4d79-8ad9-67542b922977')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f4ddd86-9410-4d79-8ad9-67542b922977 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f4ddd86-9410-4d79-8ad9-67542b922977');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4bf5a980-5cb7-420b-b7d8-d42fb540f2a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4bf5a980-5cb7-420b-b7d8-d42fb540f2a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4bf5a980-5cb7-420b-b7d8-d42fb540f2a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b9ba68f3-ea1d-4de4-a4f2-61057b49cb41\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b9ba68f3-ea1d-4de4-a4f2-61057b49cb41 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_2","summary":"{\n  \"name\": \"data_2\",\n  \"rows\": 1800,\n  \"fields\": [\n    {\n      \"column\": \"CH1_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05987361405499657,\n        \"min\": 0.0128773813410511,\n        \"max\": 0.4399770722771949,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2313841918954508,\n          0.1437137924005641,\n          0.1972692201605777\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08856442880140317,\n        \"min\": -0.0263145814806003,\n        \"max\": 0.6545135494739446,\n        \"num_unique_values\": 1721,\n        \"samples\": [\n          0.2994344543249916,\n          0.385987472731321,\n          0.2354878943827501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09689395153954791,\n        \"min\": -0.560178276187429,\n        \"max\": 0.0068669972904928,\n        \"num_unique_values\": 1729,\n        \"samples\": [\n          -0.3477610260343588,\n          -0.1724809661387882,\n          -0.3842789982432865\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06077914568028219,\n        \"min\": 0.0141936540412691,\n        \"max\": 0.4526528445752015,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.238058340724646,\n          0.0995810543279861,\n          0.2066676278591027\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.661796015667831,\n        \"min\": -2.067954524064345,\n        \"max\": 2.2947342472229986,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2735130187088278,\n          -0.7835231994066653,\n          0.0153784699092544\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0407989205981008,\n        \"min\": -1.8996503346460245,\n        \"max\": 5.870491682445996,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          -1.5876363775815865,\n          1.9236582147952768,\n          -1.7692331196434607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ch1_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2341994944558888,\n        \"min\": 0.0,\n        \"max\": 1.3020833333333333,\n        \"num_unique_values\": 199,\n        \"samples\": [\n          1.0477254474758708,\n          0.4442689294301031,\n          0.526211154032252\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07305789261721453,\n        \"min\": 0.00920390076307,\n        \"max\": 0.3719187514029253,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2139377276619699,\n          0.1411409869837444,\n          0.179106722738928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1045211048581407,\n        \"min\": 0.0240956852649266,\n        \"max\": 0.5875801775472288,\n        \"num_unique_values\": 1743,\n        \"samples\": [\n          0.2542014718063515,\n          0.0963050748632074,\n          0.2981013042650086\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11693820521873,\n        \"min\": -0.4849428251580988,\n        \"max\": 0.0001964099854771,\n        \"num_unique_values\": 1690,\n        \"samples\": [\n          -0.3692978195249415,\n          -0.2293080150255089,\n          -0.0586123631277146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07359941186051065,\n        \"min\": 0.0113002939637815,\n        \"max\": 0.3575409237762914,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2246937817743727,\n          0.0841563183334985,\n          0.196348489762948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6575209996463417,\n        \"min\": -2.014437145024604,\n        \"max\": 2.36357924407203,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.3789748234973433,\n          0.2924845766088112,\n          -0.1896406391904114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0931158052676297,\n        \"min\": -1.847200391245828,\n        \"max\": 4.754529703967839,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          -1.4565572155424165,\n          1.2292382851240389,\n          -1.5653792746795052\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30444593562467026,\n        \"min\": 0.0,\n        \"max\": 1.7361111111111112,\n        \"num_unique_values\": 265,\n        \"samples\": [\n          0.0419052125987231,\n          0.1361512120260545,\n          1.6103752089033183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"DownRight\",\n          \"UpRight\",\n          \"Left\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 4))\n","total_Class = data_2['Label'].value_counts()\n","data_2['Label'].value_counts().plot.pie(autopct = '%.2f', fontsize=12)"],"metadata":{"id":"jRKcYrlCXKQu","executionInfo":{"status":"ok","timestamp":1723740715756,"user_tz":-360,"elapsed":43,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/","height":362},"outputId":"dd574e23-1eb5-41b7-b237-64d090af58ff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='count'>"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","encoder2 = LabelEncoder()\n","data_2['Label'] = encoder2.fit_transform(data_2['Label'])"],"metadata":{"id":"vcYFGqJ8BQbj","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","column_mapping2  = {index: label for index , label in enumerate(encoder2.classes_)}\n","print(column_mapping2)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kv6V_iklJrSj","executionInfo":{"status":"ok","timestamp":1723740715756,"user_tz":-360,"elapsed":39,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"b07a085f-2168-485e-f517-4f5260b4fe7b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 'DownRight', 1: 'Left', 2: 'Right', 3: 'UpRight'}\n"]}]},{"cell_type":"code","source":["y2 = data_2['Label']\n","x2= data_2.drop('Label',axis=1)"],"metadata":{"id":"QGvsAjqNBRvS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(x2, y2, test_size = 0.10, random_state = 32)"],"metadata":{"id":"PT2OFtKWBbzc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sc2 = StandardScaler()\n","\n","X_train2 = sc2.fit_transform(X_train2)\n","X_test2 = sc2.transform(X_test2)"],"metadata":{"id":"QTysh86jBgGn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Initialize the CNN\n","classifier_cnn = Sequential()\n","\n","# Adding the first convolutional layer\n","classifier_cnn.add(Conv1D(filters=35, kernel_size=3, activation='relu', input_shape=(14, 1)))\n","\n","# Adding a pooling layer\n","classifier_cnn.add(MaxPooling1D(pool_size=2))\n","\n","# Adding the first convolutional layer\n","classifier_cnn.add(Conv1D(filters=17, kernel_size=2, activation='relu'))\n","\n","# Flattening the pooled feature maps\n","classifier_cnn.add(Flatten())\n","\n","# Adding the first fully connected (dense) layer\n","classifier_cnn.add(Dense(8, activation='relu'))\n","\n","# Adding the output layer\n","classifier_cnn.add(Dense(4, activation='softmax'))\n","\n","# Compiling the CNN\n","classifier_cnn.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"GicalIbGYnL9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import time\n","\n","# Start the timer\n","start_time = time.time()\n","\n","\n","batch_size2= 32\n","epochs2 = 200\n","\n","history2 = classifier_cnn.fit(X_train2, y_train2,\n","          batch_size=batch_size2,\n","          epochs=epochs2,\n","          validation_data=(X_test2, y_test2))\n","\n","# Stop the timer\n","end_time = time.time()\n","\n","# Calculate the elapsed time\n","elapsed_time = end_time - start_time\n","\n","# Print the elapsed time\n","print(\"Elapsed time: {:.2f} seconds\".format(elapsed_time))"],"metadata":{"collapsed":true,"id":"SpMpjrVTY1Kn","executionInfo":{"status":"ok","timestamp":1723740770747,"user_tz":-360,"elapsed":55027,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"661a415f-6c34-4e48-8e06-d87ca35f7d35"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 7ms/step - accuracy: 0.3596 - loss: 1.3104 - val_accuracy: 0.5111 - val_loss: 1.1261\n","Epoch 2/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.5622 - loss: 1.0393 - val_accuracy: 0.5778 - val_loss: 0.9864\n","Epoch 3/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.5879 - loss: 0.9620 - val_accuracy: 0.6556 - val_loss: 0.8970\n","Epoch 4/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.6159 - loss: 0.9254 - val_accuracy: 0.6556 - val_loss: 0.8391\n","Epoch 5/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6320 - loss: 0.8775 - val_accuracy: 0.7222 - val_loss: 0.7447\n","Epoch 6/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6620 - loss: 0.8290 - val_accuracy: 0.7444 - val_loss: 0.6730\n","Epoch 7/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6914 - loss: 0.7323 - val_accuracy: 0.7722 - val_loss: 0.6309\n","Epoch 8/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7204 - loss: 0.7072 - val_accuracy: 0.7944 - val_loss: 0.5856\n","Epoch 9/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7371 - loss: 0.6754 - val_accuracy: 0.8056 - val_loss: 0.5509\n","Epoch 10/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7721 - loss: 0.6086 - val_accuracy: 0.8056 - val_loss: 0.5212\n","Epoch 11/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7901 - loss: 0.5797 - val_accuracy: 0.8000 - val_loss: 0.5063\n","Epoch 12/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7723 - loss: 0.5802 - val_accuracy: 0.8389 - val_loss: 0.4498\n","Epoch 13/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8216 - loss: 0.5156 - val_accuracy: 0.8556 - val_loss: 0.4128\n","Epoch 14/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8084 - loss: 0.5065 - val_accuracy: 0.8611 - val_loss: 0.3882\n","Epoch 15/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8345 - loss: 0.4753 - val_accuracy: 0.8722 - val_loss: 0.3814\n","Epoch 16/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8179 - loss: 0.4631 - val_accuracy: 0.8722 - val_loss: 0.3657\n","Epoch 17/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8344 - loss: 0.4451 - val_accuracy: 0.8722 - val_loss: 0.3521\n","Epoch 18/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8423 - loss: 0.4281 - val_accuracy: 0.8444 - val_loss: 0.3428\n","Epoch 19/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.8517 - loss: 0.3889 - val_accuracy: 0.9056 - val_loss: 0.3169\n","Epoch 20/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8570 - loss: 0.3715 - val_accuracy: 0.8833 - val_loss: 0.3093\n","Epoch 21/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8654 - loss: 0.3705 - val_accuracy: 0.9111 - val_loss: 0.2866\n","Epoch 22/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8725 - loss: 0.3550 - val_accuracy: 0.9167 - val_loss: 0.2779\n","Epoch 23/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8890 - loss: 0.3292 - val_accuracy: 0.9222 - val_loss: 0.2784\n","Epoch 24/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8947 - loss: 0.3096 - val_accuracy: 0.9111 - val_loss: 0.2831\n","Epoch 25/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8993 - loss: 0.3140 - val_accuracy: 0.9222 - val_loss: 0.2914\n","Epoch 26/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9032 - loss: 0.3139 - val_accuracy: 0.9111 - val_loss: 0.2588\n","Epoch 27/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9122 - loss: 0.2960 - val_accuracy: 0.9389 - val_loss: 0.2452\n","Epoch 28/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9129 - loss: 0.2763 - val_accuracy: 0.9500 - val_loss: 0.2327\n","Epoch 29/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9283 - loss: 0.2609 - val_accuracy: 0.9444 - val_loss: 0.2545\n","Epoch 30/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9021 - loss: 0.2932 - val_accuracy: 0.9500 - val_loss: 0.2569\n","Epoch 31/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9198 - loss: 0.2638 - val_accuracy: 0.9444 - val_loss: 0.2283\n","Epoch 32/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9283 - loss: 0.2484 - val_accuracy: 0.9389 - val_loss: 0.2422\n","Epoch 33/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9113 - loss: 0.2519 - val_accuracy: 0.9500 - val_loss: 0.2235\n","Epoch 34/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9283 - loss: 0.2504 - val_accuracy: 0.9111 - val_loss: 0.2491\n","Epoch 35/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9240 - loss: 0.2338 - val_accuracy: 0.9389 - val_loss: 0.2226\n","Epoch 36/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9406 - loss: 0.2252 - val_accuracy: 0.9444 - val_loss: 0.2203\n","Epoch 37/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9224 - loss: 0.2296 - val_accuracy: 0.9222 - val_loss: 0.2324\n","Epoch 38/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9390 - loss: 0.2192 - val_accuracy: 0.9444 - val_loss: 0.2112\n","Epoch 39/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9218 - loss: 0.2165 - val_accuracy: 0.9556 - val_loss: 0.2028\n","Epoch 40/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9325 - loss: 0.1878 - val_accuracy: 0.9278 - val_loss: 0.2134\n","Epoch 41/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9430 - loss: 0.1893 - val_accuracy: 0.9333 - val_loss: 0.2056\n","Epoch 42/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9526 - loss: 0.1795 - val_accuracy: 0.9500 - val_loss: 0.2245\n","Epoch 43/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9335 - loss: 0.2015 - val_accuracy: 0.9444 - val_loss: 0.1956\n","Epoch 44/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9380 - loss: 0.1981 - val_accuracy: 0.9444 - val_loss: 0.2018\n","Epoch 45/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9258 - loss: 0.1923 - val_accuracy: 0.9389 - val_loss: 0.2212\n","Epoch 46/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9393 - loss: 0.1788 - val_accuracy: 0.9389 - val_loss: 0.2006\n","Epoch 47/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9480 - loss: 0.1634 - val_accuracy: 0.9444 - val_loss: 0.2097\n","Epoch 48/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9451 - loss: 0.1654 - val_accuracy: 0.9500 - val_loss: 0.2098\n","Epoch 49/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9548 - loss: 0.1530 - val_accuracy: 0.9444 - val_loss: 0.2050\n","Epoch 50/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9452 - loss: 0.1703 - val_accuracy: 0.9444 - val_loss: 0.2175\n","Epoch 51/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9421 - loss: 0.1615 - val_accuracy: 0.9444 - val_loss: 0.2131\n","Epoch 52/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9406 - loss: 0.1685 - val_accuracy: 0.9444 - val_loss: 0.2015\n","Epoch 53/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9499 - loss: 0.1542 - val_accuracy: 0.9556 - val_loss: 0.2044\n","Epoch 54/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9518 - loss: 0.1519 - val_accuracy: 0.9444 - val_loss: 0.1899\n","Epoch 55/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9509 - loss: 0.1408 - val_accuracy: 0.9389 - val_loss: 0.1927\n","Epoch 56/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9561 - loss: 0.1423 - val_accuracy: 0.9556 - val_loss: 0.1931\n","Epoch 57/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9590 - loss: 0.1366 - val_accuracy: 0.9556 - val_loss: 0.1928\n","Epoch 58/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9541 - loss: 0.1308 - val_accuracy: 0.9556 - val_loss: 0.1985\n","Epoch 59/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9532 - loss: 0.1407 - val_accuracy: 0.9500 - val_loss: 0.1982\n","Epoch 60/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9523 - loss: 0.1354 - val_accuracy: 0.9444 - val_loss: 0.1991\n","Epoch 61/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9561 - loss: 0.1483 - val_accuracy: 0.9389 - val_loss: 0.2063\n","Epoch 62/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9620 - loss: 0.1226 - val_accuracy: 0.9500 - val_loss: 0.1905\n","Epoch 63/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9654 - loss: 0.1177 - val_accuracy: 0.9556 - val_loss: 0.1816\n","Epoch 64/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9588 - loss: 0.1262 - val_accuracy: 0.9611 - val_loss: 0.1857\n","Epoch 65/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9657 - loss: 0.1104 - val_accuracy: 0.9500 - val_loss: 0.2088\n","Epoch 66/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9515 - loss: 0.1273 - val_accuracy: 0.9611 - val_loss: 0.1928\n","Epoch 67/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9657 - loss: 0.1169 - val_accuracy: 0.9444 - val_loss: 0.1981\n","Epoch 68/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9589 - loss: 0.1246 - val_accuracy: 0.9611 - val_loss: 0.1903\n","Epoch 69/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9614 - loss: 0.1158 - val_accuracy: 0.9556 - val_loss: 0.2037\n","Epoch 70/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9604 - loss: 0.1160 - val_accuracy: 0.9611 - val_loss: 0.1938\n","Epoch 71/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9651 - loss: 0.1122 - val_accuracy: 0.9444 - val_loss: 0.2035\n","Epoch 72/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9655 - loss: 0.1080 - val_accuracy: 0.9278 - val_loss: 0.2239\n","Epoch 73/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9469 - loss: 0.1275 - val_accuracy: 0.9556 - val_loss: 0.2023\n","Epoch 74/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9746 - loss: 0.1095 - val_accuracy: 0.9500 - val_loss: 0.2056\n","Epoch 75/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9619 - loss: 0.1120 - val_accuracy: 0.9611 - val_loss: 0.1824\n","Epoch 76/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9698 - loss: 0.0957 - val_accuracy: 0.9611 - val_loss: 0.1979\n","Epoch 77/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9671 - loss: 0.1066 - val_accuracy: 0.9500 - val_loss: 0.1901\n","Epoch 78/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9726 - loss: 0.0976 - val_accuracy: 0.9556 - val_loss: 0.1882\n","Epoch 79/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9704 - loss: 0.0915 - val_accuracy: 0.9667 - val_loss: 0.1992\n","Epoch 80/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9732 - loss: 0.1026 - val_accuracy: 0.9611 - val_loss: 0.1923\n","Epoch 81/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9726 - loss: 0.0994 - val_accuracy: 0.9500 - val_loss: 0.1933\n","Epoch 82/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9772 - loss: 0.0990 - val_accuracy: 0.9556 - val_loss: 0.1909\n","Epoch 83/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9737 - loss: 0.1028 - val_accuracy: 0.9611 - val_loss: 0.1737\n","Epoch 84/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9747 - loss: 0.0865 - val_accuracy: 0.9611 - val_loss: 0.1910\n","Epoch 85/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9774 - loss: 0.0846 - val_accuracy: 0.9556 - val_loss: 0.1797\n","Epoch 86/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9761 - loss: 0.0865 - val_accuracy: 0.9611 - val_loss: 0.1948\n","Epoch 87/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9748 - loss: 0.0912 - val_accuracy: 0.9611 - val_loss: 0.1771\n","Epoch 88/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9756 - loss: 0.0798 - val_accuracy: 0.9611 - val_loss: 0.1955\n","Epoch 89/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9812 - loss: 0.0793 - val_accuracy: 0.9611 - val_loss: 0.1899\n","Epoch 90/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9706 - loss: 0.0843 - val_accuracy: 0.9611 - val_loss: 0.1916\n","Epoch 91/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9773 - loss: 0.0892 - val_accuracy: 0.9389 - val_loss: 0.1805\n","Epoch 92/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - accuracy: 0.9727 - loss: 0.0852 - val_accuracy: 0.9611 - val_loss: 0.1946\n","Epoch 93/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9726 - loss: 0.0764 - val_accuracy: 0.9444 - val_loss: 0.2030\n","Epoch 94/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9776 - loss: 0.0854 - val_accuracy: 0.9667 - val_loss: 0.1730\n","Epoch 95/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9728 - loss: 0.0832 - val_accuracy: 0.9667 - val_loss: 0.1960\n","Epoch 96/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9828 - loss: 0.0756 - val_accuracy: 0.9667 - val_loss: 0.1905\n","Epoch 97/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0709 - val_accuracy: 0.9556 - val_loss: 0.1900\n","Epoch 98/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9747 - loss: 0.0888 - val_accuracy: 0.9611 - val_loss: 0.1808\n","Epoch 99/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9812 - loss: 0.0736 - val_accuracy: 0.9611 - val_loss: 0.2301\n","Epoch 100/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9809 - loss: 0.0657 - val_accuracy: 0.9667 - val_loss: 0.2127\n","Epoch 101/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9734 - loss: 0.0751 - val_accuracy: 0.9500 - val_loss: 0.2332\n","Epoch 102/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9789 - loss: 0.0801 - val_accuracy: 0.9667 - val_loss: 0.2192\n","Epoch 103/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9802 - loss: 0.0676 - val_accuracy: 0.9667 - val_loss: 0.2137\n","Epoch 104/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9796 - loss: 0.0761 - val_accuracy: 0.9611 - val_loss: 0.1995\n","Epoch 105/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9784 - loss: 0.0689 - val_accuracy: 0.9611 - val_loss: 0.2099\n","Epoch 106/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9824 - loss: 0.0628 - val_accuracy: 0.9556 - val_loss: 0.2189\n","Epoch 107/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9804 - loss: 0.0648 - val_accuracy: 0.9667 - val_loss: 0.2020\n","Epoch 108/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9737 - loss: 0.0752 - val_accuracy: 0.9722 - val_loss: 0.1871\n","Epoch 109/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9789 - loss: 0.0695 - val_accuracy: 0.9722 - val_loss: 0.1803\n","Epoch 110/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9835 - loss: 0.0631 - val_accuracy: 0.9611 - val_loss: 0.1899\n","Epoch 111/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9869 - loss: 0.0596 - val_accuracy: 0.9667 - val_loss: 0.1868\n","Epoch 112/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9796 - loss: 0.0682 - val_accuracy: 0.9556 - val_loss: 0.2218\n","Epoch 113/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9785 - loss: 0.0671 - val_accuracy: 0.9611 - val_loss: 0.1791\n","Epoch 114/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9830 - loss: 0.0559 - val_accuracy: 0.9556 - val_loss: 0.1968\n","Epoch 115/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9796 - loss: 0.0690 - val_accuracy: 0.9500 - val_loss: 0.2153\n","Epoch 116/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9852 - loss: 0.0547 - val_accuracy: 0.9722 - val_loss: 0.1837\n","Epoch 117/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9822 - loss: 0.0650 - val_accuracy: 0.9611 - val_loss: 0.1948\n","Epoch 118/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9839 - loss: 0.0546 - val_accuracy: 0.9444 - val_loss: 0.2235\n","Epoch 119/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9871 - loss: 0.0543 - val_accuracy: 0.9722 - val_loss: 0.1908\n","Epoch 120/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9800 - loss: 0.0641 - val_accuracy: 0.9611 - val_loss: 0.1889\n","Epoch 121/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9810 - loss: 0.0632 - val_accuracy: 0.9611 - val_loss: 0.1932\n","Epoch 122/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9797 - loss: 0.0649 - val_accuracy: 0.9722 - val_loss: 0.1795\n","Epoch 123/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9873 - loss: 0.0500 - val_accuracy: 0.9667 - val_loss: 0.1924\n","Epoch 124/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9859 - loss: 0.0497 - val_accuracy: 0.9556 - val_loss: 0.2024\n","Epoch 125/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9909 - loss: 0.0484 - val_accuracy: 0.9611 - val_loss: 0.2043\n","Epoch 126/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9862 - loss: 0.0555 - val_accuracy: 0.9667 - val_loss: 0.1802\n","Epoch 127/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9871 - loss: 0.0511 - val_accuracy: 0.9722 - val_loss: 0.1750\n","Epoch 128/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9823 - loss: 0.0623 - val_accuracy: 0.9667 - val_loss: 0.1918\n","Epoch 129/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9830 - loss: 0.0536 - val_accuracy: 0.9611 - val_loss: 0.2047\n","Epoch 130/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9896 - loss: 0.0496 - val_accuracy: 0.9722 - val_loss: 0.1943\n","Epoch 131/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9899 - loss: 0.0456 - val_accuracy: 0.9611 - val_loss: 0.2019\n","Epoch 132/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9840 - loss: 0.0568 - val_accuracy: 0.9556 - val_loss: 0.2225\n","Epoch 133/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9943 - loss: 0.0376 - val_accuracy: 0.9611 - val_loss: 0.1966\n","Epoch 134/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9880 - loss: 0.0480 - val_accuracy: 0.9611 - val_loss: 0.1878\n","Epoch 135/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9847 - loss: 0.0533 - val_accuracy: 0.9722 - val_loss: 0.2044\n","Epoch 136/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9855 - loss: 0.0503 - val_accuracy: 0.9667 - val_loss: 0.1977\n","Epoch 137/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9895 - loss: 0.0431 - val_accuracy: 0.9556 - val_loss: 0.2187\n","Epoch 138/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9908 - loss: 0.0457 - val_accuracy: 0.9667 - val_loss: 0.1961\n","Epoch 139/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9936 - loss: 0.0384 - val_accuracy: 0.9556 - val_loss: 0.2192\n","Epoch 140/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9896 - loss: 0.0405 - val_accuracy: 0.9722 - val_loss: 0.1839\n","Epoch 141/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9910 - loss: 0.0368 - val_accuracy: 0.9500 - val_loss: 0.2394\n","Epoch 142/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9786 - loss: 0.0671 - val_accuracy: 0.9667 - val_loss: 0.1878\n","Epoch 143/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9805 - loss: 0.0516 - val_accuracy: 0.9722 - val_loss: 0.1838\n","Epoch 144/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9858 - loss: 0.0404 - val_accuracy: 0.9667 - val_loss: 0.1821\n","Epoch 145/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9879 - loss: 0.0461 - val_accuracy: 0.9556 - val_loss: 0.1987\n","Epoch 146/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9881 - loss: 0.0539 - val_accuracy: 0.9722 - val_loss: 0.1857\n","Epoch 147/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9867 - loss: 0.0444 - val_accuracy: 0.9722 - val_loss: 0.1795\n","Epoch 148/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9926 - loss: 0.0379 - val_accuracy: 0.9611 - val_loss: 0.1993\n","Epoch 149/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9917 - loss: 0.0408 - val_accuracy: 0.9722 - val_loss: 0.1802\n","Epoch 150/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9874 - loss: 0.0521 - val_accuracy: 0.9611 - val_loss: 0.2042\n","Epoch 151/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9830 - loss: 0.0513 - val_accuracy: 0.9556 - val_loss: 0.2237\n","Epoch 152/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9867 - loss: 0.0461 - val_accuracy: 0.9667 - val_loss: 0.1897\n","Epoch 153/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9912 - loss: 0.0464 - val_accuracy: 0.9667 - val_loss: 0.1925\n","Epoch 154/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9913 - loss: 0.0420 - val_accuracy: 0.9611 - val_loss: 0.2029\n","Epoch 155/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9873 - loss: 0.0445 - val_accuracy: 0.9722 - val_loss: 0.1897\n","Epoch 156/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9904 - loss: 0.0415 - val_accuracy: 0.9611 - val_loss: 0.2067\n","Epoch 157/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9927 - loss: 0.0347 - val_accuracy: 0.9611 - val_loss: 0.2326\n","Epoch 158/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9883 - loss: 0.0403 - val_accuracy: 0.9556 - val_loss: 0.2147\n","Epoch 159/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9879 - loss: 0.0446 - val_accuracy: 0.9556 - val_loss: 0.2362\n","Epoch 160/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9888 - loss: 0.0389 - val_accuracy: 0.9667 - val_loss: 0.2002\n","Epoch 161/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9889 - loss: 0.0407 - val_accuracy: 0.9556 - val_loss: 0.2314\n","Epoch 162/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9929 - loss: 0.0327 - val_accuracy: 0.9667 - val_loss: 0.1816\n","Epoch 163/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9947 - loss: 0.0359 - val_accuracy: 0.9722 - val_loss: 0.1950\n","Epoch 164/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9908 - loss: 0.0359 - val_accuracy: 0.9722 - val_loss: 0.1865\n","Epoch 165/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9906 - loss: 0.0384 - val_accuracy: 0.9667 - val_loss: 0.2048\n","Epoch 166/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9935 - loss: 0.0284 - val_accuracy: 0.9611 - val_loss: 0.2438\n","Epoch 167/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9892 - loss: 0.0421 - val_accuracy: 0.9611 - val_loss: 0.2233\n","Epoch 168/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9903 - loss: 0.0360 - val_accuracy: 0.9611 - val_loss: 0.2045\n","Epoch 169/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9920 - loss: 0.0325 - val_accuracy: 0.9611 - val_loss: 0.2140\n","Epoch 170/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9925 - loss: 0.0319 - val_accuracy: 0.9722 - val_loss: 0.2113\n","Epoch 171/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9944 - loss: 0.0302 - val_accuracy: 0.9556 - val_loss: 0.2244\n","Epoch 172/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9924 - loss: 0.0325 - val_accuracy: 0.9611 - val_loss: 0.2308\n","Epoch 173/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9917 - loss: 0.0291 - val_accuracy: 0.9556 - val_loss: 0.2387\n","Epoch 174/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - accuracy: 0.9860 - loss: 0.0410 - val_accuracy: 0.9611 - val_loss: 0.2238\n","Epoch 175/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9898 - loss: 0.0374 - val_accuracy: 0.9556 - val_loss: 0.2529\n","Epoch 176/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9847 - loss: 0.0453 - val_accuracy: 0.9722 - val_loss: 0.1995\n","Epoch 177/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 9ms/step - accuracy: 0.9927 - loss: 0.0297 - val_accuracy: 0.9722 - val_loss: 0.2034\n","Epoch 178/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9881 - loss: 0.0450 - val_accuracy: 0.9556 - val_loss: 0.2263\n","Epoch 179/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - accuracy: 0.9952 - loss: 0.0310 - val_accuracy: 0.9667 - val_loss: 0.2026\n","Epoch 180/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - accuracy: 0.9920 - loss: 0.0378 - val_accuracy: 0.9556 - val_loss: 0.2243\n","Epoch 181/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9968 - loss: 0.0279 - val_accuracy: 0.9611 - val_loss: 0.2327\n","Epoch 182/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9916 - loss: 0.0328 - val_accuracy: 0.9556 - val_loss: 0.2317\n","Epoch 183/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9895 - loss: 0.0352 - val_accuracy: 0.9556 - val_loss: 0.2418\n","Epoch 184/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9937 - loss: 0.0330 - val_accuracy: 0.9611 - val_loss: 0.2164\n","Epoch 185/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9887 - loss: 0.0344 - val_accuracy: 0.9556 - val_loss: 0.2377\n","Epoch 186/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9939 - loss: 0.0272 - val_accuracy: 0.9611 - val_loss: 0.2061\n","Epoch 187/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9964 - loss: 0.0255 - val_accuracy: 0.9556 - val_loss: 0.2578\n","Epoch 188/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9930 - loss: 0.0269 - val_accuracy: 0.9556 - val_loss: 0.2456\n","Epoch 189/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9978 - loss: 0.0181 - val_accuracy: 0.9611 - val_loss: 0.2190\n","Epoch 190/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9956 - loss: 0.0251 - val_accuracy: 0.9611 - val_loss: 0.2200\n","Epoch 191/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9934 - loss: 0.0289 - val_accuracy: 0.9611 - val_loss: 0.2360\n","Epoch 192/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9891 - loss: 0.0344 - val_accuracy: 0.9611 - val_loss: 0.2658\n","Epoch 193/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9972 - loss: 0.0236 - val_accuracy: 0.9611 - val_loss: 0.2595\n","Epoch 194/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9905 - loss: 0.0289 - val_accuracy: 0.9500 - val_loss: 0.2762\n","Epoch 195/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9929 - loss: 0.0282 - val_accuracy: 0.9611 - val_loss: 0.2183\n","Epoch 196/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9954 - loss: 0.0255 - val_accuracy: 0.9556 - val_loss: 0.2870\n","Epoch 197/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9910 - loss: 0.0299 - val_accuracy: 0.9667 - val_loss: 0.2454\n","Epoch 198/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9916 - loss: 0.0259 - val_accuracy: 0.9611 - val_loss: 0.2758\n","Epoch 199/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9925 - loss: 0.0250 - val_accuracy: 0.9611 - val_loss: 0.2293\n","Epoch 200/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9964 - loss: 0.0216 - val_accuracy: 0.9556 - val_loss: 0.2597\n","Elapsed time: 55.66 seconds\n"]}]},{"cell_type":"code","source":["\n","y_pred2 = classifier_cnn.predict(X_test2)\n","y_pred2 = np.argmax(y_pred2, axis=1)\n","from sklearn.metrics import accuracy_score\n","accuracy2 = accuracy_score(y_test2, y_pred2)\n","print(\"Accuracy of the model:\", accuracy2)\n"],"metadata":{"id":"TFj3wmhqZQHg","executionInfo":{"status":"ok","timestamp":1723740770748,"user_tz":-360,"elapsed":30,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"aeb568fc-ce32-4da1-c471-1ff8ae73b645"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m6/6\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\n","Accuracy of the model: 0.9555555555555556\n"]}]},{"cell_type":"code","source":["\n","from sklearn.metrics import classification_report\n","\n","print(classification_report(y_test2, y_pred2, target_names=column_mapping2.values()))\n"],"metadata":{"id":"sknnRSlhPd56","executionInfo":{"status":"ok","timestamp":1723740770748,"user_tz":-360,"elapsed":17,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"cf3463c9-af83-45f4-962d-0fc94b723995"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","   DownRight       0.96      0.96      0.96        28\n","        Left       0.93      0.98      0.95        86\n","       Right       1.00      0.90      0.95        31\n","     UpRight       0.97      0.94      0.96        35\n","\n","    accuracy                           0.96       180\n","   macro avg       0.97      0.95      0.96       180\n","weighted avg       0.96      0.96      0.96       180\n","\n"]}]},{"cell_type":"code","source":["# Calculate precision, recall, and F1-score\n","precision = precision_score(y_test2, y_pred2, average='weighted')\n","recall = recall_score(y_test2, y_pred2, average='weighted')\n","f1 = f1_score(y_test2, y_pred2, average='weighted')\n","\n","# Print the results\n","print(\"Precision:\", precision)\n","print(\"Recall:\", recall)\n","print(\"F1-score:\", f1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aHz0412q-iYi","executionInfo":{"status":"ok","timestamp":1723741181001,"user_tz":-360,"elapsed":572,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"91997c5d-5c0d-49f4-b532-b7838fffa9a8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision: 0.9568736383442265\n","Recall: 0.9555555555555556\n","F1-score: 0.9555161043001867\n"]}]},{"cell_type":"code","source":["\n","validation_data = data.sample(frac=0.1, random_state=32)\n","\n","start_time = time.time()\n","y_pred_validation = classifier_cnn.predict(validation_data.drop('Label', axis=1))\n","end_time = time.time()\n","validation_time = end_time - start_time\n","print(\"Validation time: {:.2f} seconds\".format(validation_time))\n"],"metadata":{"id":"4kiYfTBsZxY_","executionInfo":{"status":"ok","timestamp":1723740770748,"user_tz":-360,"elapsed":15,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3703eac5-ec28-4ec6-ae6c-a34f39021219"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step \n","Validation time: 0.13 seconds\n"]}]},{"cell_type":"code","source":["validation_data.shape"],"metadata":{"id":"n84anb0mlQWN","executionInfo":{"status":"ok","timestamp":1723740770749,"user_tz":-360,"elapsed":14,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"04bd4630-cc1e-4811-a504-e5b25893ddb4","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(270, 15)"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["\n","import matplotlib.pyplot as plt\n","plt.figure(figsize=(20, 5))\n","plt.plot(history2.history['val_loss'])\n","plt.title('Epoch vs Validation Loss')\n","plt.ylabel('Validation Loss')\n","plt.xlabel('Epoch')\n","plt.show()\n"],"metadata":{"id":"IDy8yk5MlTUt","colab":{"base_uri":"https://localhost:8080/","height":200},"executionInfo":{"status":"ok","timestamp":1723740770749,"user_tz":-360,"elapsed":12,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"0436616b-8376-4c0c-947b-13af8e03e754"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# classifier_cnn.save('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Conference 3/Models/filtered/oversample/CNN2.h5')"],"metadata":{"id":"JdnZprQHl9v_","executionInfo":{"status":"ok","timestamp":1723741200564,"user_tz":-360,"elapsed":5,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8b9fe0ff-2b02-4245-be60-4be2d0ac2b8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]}]},{"cell_type":"code","source":["# Save the scalers\n","\n","# with open('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Conference 3/Models/filtered/oversample/scl_CNN2.pkl', 'wb') as f:\n","#     pickle.dump(sc2, f)"],"metadata":{"id":"TJETgLq9eJJT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"jMhTTOnQ-1TK"},"execution_count":null,"outputs":[]}]}