{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1-FH_lp-bwaLaoeBHrmFNkrxjT9qLssn7","authorship_tag":"ABX9TyNDr3Q8hVyxS/dIiXhylEaE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"XhGKlPUBAwl2"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sn\n","\n","from sklearn.preprocessing import LabelEncoder\n","from imblearn.over_sampling import SMOTE\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","\n","import tensorflow\n","from tensorflow import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from sklearn.utils import shuffle\n","\n","\n","\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Conv1D, MaxPooling1D, Flatten\n","from tensorflow.keras.optimizers import Adam\n","\n","\n","import pickle\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"code","source":["data = pd.read_csv('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Dataset/Training_dataset_300.csv')"],"metadata":{"id":"im5AIL8sAyam"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"xq9wO8ZyMNrF","executionInfo":{"status":"ok","timestamp":1723739165485,"user_tz":-360,"elapsed":54,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"7c4a34a4-64f0-4a94-f7b5-4241708abcbb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CH1_mean   CH1_max   CH1_min   CH1_std  CH1_skewness  CH1_kurtosis  \\\n","0     0.022389  0.000485 -0.049438  0.011328     -0.525205     -0.217967   \n","1     0.017667  0.055027 -0.015088  0.019140      0.624257     -0.407028   \n","2     0.010616  0.021808 -0.017455  0.012056      0.351023     -1.242023   \n","3     0.013873  0.028911 -0.019742  0.014628      0.060673     -1.600967   \n","4     0.007213  0.015612 -0.022637  0.008863     -1.056253      0.866871   \n","...        ...       ...       ...       ...           ...           ...   \n","2695  0.301566  0.402387 -0.411169  0.317360      0.357206     -1.542943   \n","2696  0.165523  0.226617 -0.332358  0.182890     -0.295549     -1.389136   \n","2697  0.261627  0.303234 -0.395024  0.257394      0.482207     -1.455302   \n","2698  0.307804  0.417190 -0.444832  0.309003     -0.626304     -1.301949   \n","2699  0.295987  0.380700 -0.427437  0.308420      0.317964     -1.580125   \n","\n","      Ch1_freq_dom  CH2_mean   CH2_max   CH2_min   CH2_std  CH2_skewness  \\\n","0         0.000000  0.251783  0.645863 -0.225991  0.290063      1.288788   \n","1         0.000000  0.237017  0.618576 -0.192354  0.283997      0.935800   \n","2         0.434028  0.231079  0.526342 -0.207111  0.267068      0.967346   \n","3         0.868056  0.226873  0.570502 -0.206747  0.261074      1.339687   \n","4         0.868056  0.268975  0.647510 -0.228743  0.318560      0.845475   \n","...            ...       ...       ...       ...       ...           ...   \n","2695      0.868056  0.122589  0.199695 -0.200491  0.129523      0.299095   \n","2696      0.434028  0.189057  0.373926 -0.387650  0.223576      0.030336   \n","2697      0.434028  0.186010  0.224392 -0.239608  0.183464      0.642096   \n","2698      0.434028  0.143581  0.302274 -0.221421  0.147676     -0.385110   \n","2699      0.868056  0.140934  0.213650 -0.210654  0.148610      0.332107   \n","\n","      CH2_kurtosis  CH2_freq_dom    Label  \n","0         0.059286      0.434028    Blink  \n","1        -0.762640      0.434028    Blink  \n","2        -0.775608      0.434028    Blink  \n","3         0.165355      0.434028    Blink  \n","4        -0.991855      0.434028    Blink  \n","...            ...           ...      ...  \n","2695     -1.506270      0.868056  UpRight  \n","2696     -0.982925      0.434028  UpRight  \n","2697     -1.419709      0.434028  UpRight  \n","2698     -0.942153      0.434028  UpRight  \n","2699     -1.500131      0.868056  UpRight  \n","\n","[2700 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-e55d3078-21ef-47ce-8f78-a4aabbf79c4e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CH1_mean</th>\n","      <th>CH1_max</th>\n","      <th>CH1_min</th>\n","      <th>CH1_std</th>\n","      <th>CH1_skewness</th>\n","      <th>CH1_kurtosis</th>\n","      <th>Ch1_freq_dom</th>\n","      <th>CH2_mean</th>\n","      <th>CH2_max</th>\n","      <th>CH2_min</th>\n","      <th>CH2_std</th>\n","      <th>CH2_skewness</th>\n","      <th>CH2_kurtosis</th>\n","      <th>CH2_freq_dom</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.022389</td>\n","      <td>0.000485</td>\n","      <td>-0.049438</td>\n","      <td>0.011328</td>\n","      <td>-0.525205</td>\n","      <td>-0.217967</td>\n","      <td>0.000000</td>\n","      <td>0.251783</td>\n","      <td>0.645863</td>\n","      <td>-0.225991</td>\n","      <td>0.290063</td>\n","      <td>1.288788</td>\n","      <td>0.059286</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.017667</td>\n","      <td>0.055027</td>\n","      <td>-0.015088</td>\n","      <td>0.019140</td>\n","      <td>0.624257</td>\n","      <td>-0.407028</td>\n","      <td>0.000000</td>\n","      <td>0.237017</td>\n","      <td>0.618576</td>\n","      <td>-0.192354</td>\n","      <td>0.283997</td>\n","      <td>0.935800</td>\n","      <td>-0.762640</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.010616</td>\n","      <td>0.021808</td>\n","      <td>-0.017455</td>\n","      <td>0.012056</td>\n","      <td>0.351023</td>\n","      <td>-1.242023</td>\n","      <td>0.434028</td>\n","      <td>0.231079</td>\n","      <td>0.526342</td>\n","      <td>-0.207111</td>\n","      <td>0.267068</td>\n","      <td>0.967346</td>\n","      <td>-0.775608</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.013873</td>\n","      <td>0.028911</td>\n","      <td>-0.019742</td>\n","      <td>0.014628</td>\n","      <td>0.060673</td>\n","      <td>-1.600967</td>\n","      <td>0.868056</td>\n","      <td>0.226873</td>\n","      <td>0.570502</td>\n","      <td>-0.206747</td>\n","      <td>0.261074</td>\n","      <td>1.339687</td>\n","      <td>0.165355</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.007213</td>\n","      <td>0.015612</td>\n","      <td>-0.022637</td>\n","      <td>0.008863</td>\n","      <td>-1.056253</td>\n","      <td>0.866871</td>\n","      <td>0.868056</td>\n","      <td>0.268975</td>\n","      <td>0.647510</td>\n","      <td>-0.228743</td>\n","      <td>0.318560</td>\n","      <td>0.845475</td>\n","      <td>-0.991855</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2695</th>\n","      <td>0.301566</td>\n","      <td>0.402387</td>\n","      <td>-0.411169</td>\n","      <td>0.317360</td>\n","      <td>0.357206</td>\n","      <td>-1.542943</td>\n","      <td>0.868056</td>\n","      <td>0.122589</td>\n","      <td>0.199695</td>\n","      <td>-0.200491</td>\n","      <td>0.129523</td>\n","      <td>0.299095</td>\n","      <td>-1.506270</td>\n","      <td>0.868056</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2696</th>\n","      <td>0.165523</td>\n","      <td>0.226617</td>\n","      <td>-0.332358</td>\n","      <td>0.182890</td>\n","      <td>-0.295549</td>\n","      <td>-1.389136</td>\n","      <td>0.434028</td>\n","      <td>0.189057</td>\n","      <td>0.373926</td>\n","      <td>-0.387650</td>\n","      <td>0.223576</td>\n","      <td>0.030336</td>\n","      <td>-0.982925</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2697</th>\n","      <td>0.261627</td>\n","      <td>0.303234</td>\n","      <td>-0.395024</td>\n","      <td>0.257394</td>\n","      <td>0.482207</td>\n","      <td>-1.455302</td>\n","      <td>0.434028</td>\n","      <td>0.186010</td>\n","      <td>0.224392</td>\n","      <td>-0.239608</td>\n","      <td>0.183464</td>\n","      <td>0.642096</td>\n","      <td>-1.419709</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2698</th>\n","      <td>0.307804</td>\n","      <td>0.417190</td>\n","      <td>-0.444832</td>\n","      <td>0.309003</td>\n","      <td>-0.626304</td>\n","      <td>-1.301949</td>\n","      <td>0.434028</td>\n","      <td>0.143581</td>\n","      <td>0.302274</td>\n","      <td>-0.221421</td>\n","      <td>0.147676</td>\n","      <td>-0.385110</td>\n","      <td>-0.942153</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2699</th>\n","      <td>0.295987</td>\n","      <td>0.380700</td>\n","      <td>-0.427437</td>\n","      <td>0.308420</td>\n","      <td>0.317964</td>\n","      <td>-1.580125</td>\n","      <td>0.868056</td>\n","      <td>0.140934</td>\n","      <td>0.213650</td>\n","      <td>-0.210654</td>\n","      <td>0.148610</td>\n","      <td>0.332107</td>\n","      <td>-1.500131</td>\n","      <td>0.868056</td>\n","      <td>UpRight</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2700 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e55d3078-21ef-47ce-8f78-a4aabbf79c4e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e55d3078-21ef-47ce-8f78-a4aabbf79c4e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e55d3078-21ef-47ce-8f78-a4aabbf79c4e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ed773b4c-b2e0-457f-9b66-b876fb8089c0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed773b4c-b2e0-457f-9b66-b876fb8089c0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ed773b4c-b2e0-457f-9b66-b876fb8089c0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6e69fbb8-f4b1-42e3-9e58-8d48a54cea85\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6e69fbb8-f4b1-42e3-9e58-8d48a54cea85 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 2700,\n  \"fields\": [\n    {\n      \"column\": \"CH1_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09683987287613761,\n        \"min\": 0.0043111692562194,\n        \"max\": 0.4399770722771949,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.1678248264825417,\n          0.2161942020024666,\n          0.2108050455338866\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13318494143231077,\n        \"min\": -0.0263145814806003,\n        \"max\": 0.6545135494739446,\n        \"num_unique_values\": 2579,\n        \"samples\": [\n          0.0195755310532701,\n          0.2301555813767754,\n          0.0298468625901095\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13920559235498509,\n        \"min\": -0.560178276187429,\n        \"max\": 0.0068669972904928,\n        \"num_unique_values\": 2586,\n        \"samples\": [\n          -0.2436919319072137,\n          -0.2425817910934269,\n          -0.3423383843317506\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09848428545687507,\n        \"min\": 0.0051882649730402,\n        \"max\": 0.4526528445752015,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.1789837957819208,\n          0.2152203097581069,\n          0.2185353614208253\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6754151729293391,\n        \"min\": -2.1555636990066067,\n        \"max\": 2.2947342472229986,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.2104136616748539,\n          0.4437076548540251,\n          0.0501089185401846\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0399220477103095,\n        \"min\": -1.8996503346460245,\n        \"max\": 5.870491682445996,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          -1.653084452415282,\n          -1.5706084430936464,\n          -1.832108125582695\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ch1_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2813321914192973,\n        \"min\": 0.0,\n        \"max\": 1.7361111111111112,\n        \"num_unique_values\": 431,\n        \"samples\": [\n          0.4873563516140459,\n          0.7495851834684585,\n          0.813874541019928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07480950273523645,\n        \"min\": 0.00920390076307,\n        \"max\": 0.4615068636424269,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.0530332980333602,\n          0.1843208480238198,\n          0.1895412677394529\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1257907898935406,\n        \"min\": 0.0240956852649266,\n        \"max\": 0.8334965567674951,\n        \"num_unique_values\": 2600,\n        \"samples\": [\n          0.4011786401146001,\n          0.2906340277176857,\n          0.140068217120503\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1155511057896551,\n        \"min\": -0.6921206005084612,\n        \"max\": 0.0782941463413214,\n        \"num_unique_values\": 2530,\n        \"samples\": [\n          -0.1922934796117114,\n          -0.0757114815374422,\n          -0.2751707465082151\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07778002060721308,\n        \"min\": 0.0113002939637815,\n        \"max\": 0.506757371274597,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.0591258616262506,\n          0.1838258827199705,\n          0.2020303666269546\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6690742976225065,\n        \"min\": -2.014437145024604,\n        \"max\": 2.36357924407203,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          -0.63956908139543,\n          0.1842287722466059,\n          -0.1266876917849999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0861982401464638,\n        \"min\": -1.847200391245828,\n        \"max\": 4.754529703967839,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          -1.0624566439599448,\n          -1.7252113853640187,\n          -1.706702712566729\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3350417848199592,\n        \"min\": 0.0,\n        \"max\": 3.4722222222222223,\n        \"num_unique_values\": 439,\n        \"samples\": [\n          1.033645720697592,\n          0.4382209429701804,\n          0.8092560485145616\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"DownLeft\",\n          \"Left\",\n          \"UpLeft\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":231}]},{"cell_type":"code","source":["data['Label'] = data['Label'].replace({'DownLeft': 'Left', 'UpLeft': 'Left'})"],"metadata":{"id":"BTx2zNeWKs2s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['Label'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"i-jF4aysar2J","executionInfo":{"status":"ok","timestamp":1723739165486,"user_tz":-360,"elapsed":44,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"e4bd3d11-79db-4688-f151-ac7f7b22899b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","Left         900\n","Blink        300\n","Right        300\n","UP           300\n","Down         300\n","UpRight      300\n","DownRight    300\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Left</th>\n","      <td>900</td>\n","    </tr>\n","    <tr>\n","      <th>Blink</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Right</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UP</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Down</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UpRight</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>DownRight</th>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":240}]},{"cell_type":"code","source":["# Shuffle the dataset\n","data= shuffle(data, random_state=32)\n","data.reset_index(drop=True, inplace=True)\n"],"metadata":{"id":"qDHty85OfA33"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['Label'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"oijTyzL8fsjs","executionInfo":{"status":"ok","timestamp":1723739165487,"user_tz":-360,"elapsed":43,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"e5a59a42-4e91-4d8d-b5fa-5f243739421f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","Left         900\n","Down         300\n","Blink        300\n","DownRight    300\n","UP           300\n","Right        300\n","UpRight      300\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Left</th>\n","      <td>900</td>\n","    </tr>\n","    <tr>\n","      <th>Down</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Blink</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>DownRight</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UP</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Right</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UpRight</th>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":242}]},{"cell_type":"code","source":["data_2 = data[data['Label'].isin(['Right','DownRight','UpRight', 'Left'])]\n","data_2.index = range(len(data_2))"],"metadata":{"id":"KXnY6h4QMAXK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# left_data_ch1 = ch1[ch1['label'] == 'Left']\n","# new_column_names = data_2.columns\n","# left_data_ch1.columns = new_column_names\n","# data_2 = pd.concat([data_2, left_data_ch1], ignore_index=True)\n","\n","# data_2= shuffle(data_2, random_state=32)\n","# data_2.reset_index(drop=True, inplace=True)"],"metadata":{"id":"YCHM4mbmwfSk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"qJktiPGjc1Dr","executionInfo":{"status":"ok","timestamp":1723739165488,"user_tz":-360,"elapsed":40,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"fe9e399a-f4d6-46d3-df1d-a670519dee62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CH1_mean   CH1_max   CH1_min   CH1_std  CH1_skewness  CH1_kurtosis  \\\n","0     0.131127  0.126820 -0.469613  0.171179     -1.462237      0.790458   \n","1     0.205652  0.294938 -0.216920  0.216572      0.469844     -1.608772   \n","2     0.254094  0.310796 -0.353914  0.259533     -0.210908     -1.828207   \n","3     0.249511  0.327852 -0.292756  0.247518      0.666864     -1.298441   \n","4     0.264730  0.289746 -0.366226  0.274945      0.006185     -1.847014   \n","...        ...       ...       ...       ...           ...           ...   \n","1795  0.207822  0.285159 -0.282242  0.178906     -1.127872     -0.306198   \n","1796  0.161539  0.206156 -0.247351  0.171493     -0.333548     -1.617156   \n","1797  0.205732  0.269523 -0.315634  0.219490      0.205935     -1.614134   \n","1798  0.234015  0.375086 -0.294102  0.252604      0.255103     -1.610384   \n","1799  0.230862  0.375851 -0.294864  0.241297      0.812354     -0.979899   \n","\n","      Ch1_freq_dom  CH2_mean   CH2_max   CH2_min   CH2_std  CH2_skewness  \\\n","0         0.791391  0.102282  0.258542 -0.123654  0.117977      0.843805   \n","1         0.434028  0.180436  0.254829 -0.221195  0.189705      0.358811   \n","2         0.434028  0.028532  0.129203 -0.036015  0.042343      1.716800   \n","3         0.434028  0.118008  0.151814 -0.159330  0.108295     -0.970341   \n","4         0.434028  0.026913  0.054149 -0.043712  0.029575      0.099785   \n","...            ...       ...       ...       ...       ...           ...   \n","1795      0.000000  0.217722  0.360948 -0.323717  0.191531     -1.183554   \n","1796      0.434028  0.076716  0.094632 -0.128727  0.082164     -0.273398   \n","1797      0.868056  0.200325  0.273733 -0.295250  0.212940      0.183348   \n","1798      0.868056  0.185831  0.290728 -0.349023  0.206874     -0.537586   \n","1799      0.434028  0.037978  0.059553 -0.079003  0.042152     -0.058162   \n","\n","      CH2_kurtosis  CH2_freq_dom      Label  \n","0        -0.743303      1.046737       Left  \n","1        -1.663226      0.434028       Left  \n","2         2.035054      0.434028       Left  \n","3        -0.575828      0.094380  DownRight  \n","4        -1.328345      0.434028      Right  \n","...            ...           ...        ...  \n","1795      0.008754      0.000000       Left  \n","1796     -1.680210      0.434028    UpRight  \n","1797     -1.634766      0.868056       Left  \n","1798     -1.254741      0.868056  DownRight  \n","1799     -0.959357      0.434028       Left  \n","\n","[1800 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-46d9fa6e-047a-4ed2-b6f6-8a1b88129741\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CH1_mean</th>\n","      <th>CH1_max</th>\n","      <th>CH1_min</th>\n","      <th>CH1_std</th>\n","      <th>CH1_skewness</th>\n","      <th>CH1_kurtosis</th>\n","      <th>Ch1_freq_dom</th>\n","      <th>CH2_mean</th>\n","      <th>CH2_max</th>\n","      <th>CH2_min</th>\n","      <th>CH2_std</th>\n","      <th>CH2_skewness</th>\n","      <th>CH2_kurtosis</th>\n","      <th>CH2_freq_dom</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.131127</td>\n","      <td>0.126820</td>\n","      <td>-0.469613</td>\n","      <td>0.171179</td>\n","      <td>-1.462237</td>\n","      <td>0.790458</td>\n","      <td>0.791391</td>\n","      <td>0.102282</td>\n","      <td>0.258542</td>\n","      <td>-0.123654</td>\n","      <td>0.117977</td>\n","      <td>0.843805</td>\n","      <td>-0.743303</td>\n","      <td>1.046737</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.205652</td>\n","      <td>0.294938</td>\n","      <td>-0.216920</td>\n","      <td>0.216572</td>\n","      <td>0.469844</td>\n","      <td>-1.608772</td>\n","      <td>0.434028</td>\n","      <td>0.180436</td>\n","      <td>0.254829</td>\n","      <td>-0.221195</td>\n","      <td>0.189705</td>\n","      <td>0.358811</td>\n","      <td>-1.663226</td>\n","      <td>0.434028</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.254094</td>\n","      <td>0.310796</td>\n","      <td>-0.353914</td>\n","      <td>0.259533</td>\n","      <td>-0.210908</td>\n","      <td>-1.828207</td>\n","      <td>0.434028</td>\n","      <td>0.028532</td>\n","      <td>0.129203</td>\n","      <td>-0.036015</td>\n","      <td>0.042343</td>\n","      <td>1.716800</td>\n","      <td>2.035054</td>\n","      <td>0.434028</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.249511</td>\n","      <td>0.327852</td>\n","      <td>-0.292756</td>\n","      <td>0.247518</td>\n","      <td>0.666864</td>\n","      <td>-1.298441</td>\n","      <td>0.434028</td>\n","      <td>0.118008</td>\n","      <td>0.151814</td>\n","      <td>-0.159330</td>\n","      <td>0.108295</td>\n","      <td>-0.970341</td>\n","      <td>-0.575828</td>\n","      <td>0.094380</td>\n","      <td>DownRight</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.264730</td>\n","      <td>0.289746</td>\n","      <td>-0.366226</td>\n","      <td>0.274945</td>\n","      <td>0.006185</td>\n","      <td>-1.847014</td>\n","      <td>0.434028</td>\n","      <td>0.026913</td>\n","      <td>0.054149</td>\n","      <td>-0.043712</td>\n","      <td>0.029575</td>\n","      <td>0.099785</td>\n","      <td>-1.328345</td>\n","      <td>0.434028</td>\n","      <td>Right</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1795</th>\n","      <td>0.207822</td>\n","      <td>0.285159</td>\n","      <td>-0.282242</td>\n","      <td>0.178906</td>\n","      <td>-1.127872</td>\n","      <td>-0.306198</td>\n","      <td>0.000000</td>\n","      <td>0.217722</td>\n","      <td>0.360948</td>\n","      <td>-0.323717</td>\n","      <td>0.191531</td>\n","      <td>-1.183554</td>\n","      <td>0.008754</td>\n","      <td>0.000000</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>1796</th>\n","      <td>0.161539</td>\n","      <td>0.206156</td>\n","      <td>-0.247351</td>\n","      <td>0.171493</td>\n","      <td>-0.333548</td>\n","      <td>-1.617156</td>\n","      <td>0.434028</td>\n","      <td>0.076716</td>\n","      <td>0.094632</td>\n","      <td>-0.128727</td>\n","      <td>0.082164</td>\n","      <td>-0.273398</td>\n","      <td>-1.680210</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>1797</th>\n","      <td>0.205732</td>\n","      <td>0.269523</td>\n","      <td>-0.315634</td>\n","      <td>0.219490</td>\n","      <td>0.205935</td>\n","      <td>-1.614134</td>\n","      <td>0.868056</td>\n","      <td>0.200325</td>\n","      <td>0.273733</td>\n","      <td>-0.295250</td>\n","      <td>0.212940</td>\n","      <td>0.183348</td>\n","      <td>-1.634766</td>\n","      <td>0.868056</td>\n","      <td>Left</td>\n","    </tr>\n","    <tr>\n","      <th>1798</th>\n","      <td>0.234015</td>\n","      <td>0.375086</td>\n","      <td>-0.294102</td>\n","      <td>0.252604</td>\n","      <td>0.255103</td>\n","      <td>-1.610384</td>\n","      <td>0.868056</td>\n","      <td>0.185831</td>\n","      <td>0.290728</td>\n","      <td>-0.349023</td>\n","      <td>0.206874</td>\n","      <td>-0.537586</td>\n","      <td>-1.254741</td>\n","      <td>0.868056</td>\n","      <td>DownRight</td>\n","    </tr>\n","    <tr>\n","      <th>1799</th>\n","      <td>0.230862</td>\n","      <td>0.375851</td>\n","      <td>-0.294864</td>\n","      <td>0.241297</td>\n","      <td>0.812354</td>\n","      <td>-0.979899</td>\n","      <td>0.434028</td>\n","      <td>0.037978</td>\n","      <td>0.059553</td>\n","      <td>-0.079003</td>\n","      <td>0.042152</td>\n","      <td>-0.058162</td>\n","      <td>-0.959357</td>\n","      <td>0.434028</td>\n","      <td>Left</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1800 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46d9fa6e-047a-4ed2-b6f6-8a1b88129741')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-46d9fa6e-047a-4ed2-b6f6-8a1b88129741 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-46d9fa6e-047a-4ed2-b6f6-8a1b88129741');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c1de7b82-8cef-461a-9a0a-318de281624e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1de7b82-8cef-461a-9a0a-318de281624e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c1de7b82-8cef-461a-9a0a-318de281624e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0bd40d26-1d4d-4183-9d4b-a278058a3cd7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0bd40d26-1d4d-4183-9d4b-a278058a3cd7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_2","summary":"{\n  \"name\": \"data_2\",\n  \"rows\": 1800,\n  \"fields\": [\n    {\n      \"column\": \"CH1_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05987361405499657,\n        \"min\": 0.0128773813410511,\n        \"max\": 0.4399770722771949,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2313841918954508,\n          0.1437137924005641,\n          0.1972692201605777\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08856442880140317,\n        \"min\": -0.0263145814806003,\n        \"max\": 0.6545135494739446,\n        \"num_unique_values\": 1721,\n        \"samples\": [\n          0.2994344543249916,\n          0.385987472731321,\n          0.2354878943827501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09689395153954791,\n        \"min\": -0.560178276187429,\n        \"max\": 0.0068669972904928,\n        \"num_unique_values\": 1729,\n        \"samples\": [\n          -0.3477610260343588,\n          -0.1724809661387882,\n          -0.3842789982432865\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06077914568028219,\n        \"min\": 0.0141936540412691,\n        \"max\": 0.4526528445752015,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.238058340724646,\n          0.0995810543279861,\n          0.2066676278591027\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.661796015667831,\n        \"min\": -2.067954524064345,\n        \"max\": 2.2947342472229986,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2735130187088278,\n          -0.7835231994066653,\n          0.0153784699092544\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0407989205981008,\n        \"min\": -1.8996503346460245,\n        \"max\": 5.870491682445996,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          -1.5876363775815865,\n          1.9236582147952768,\n          -1.7692331196434607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ch1_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2341994944558888,\n        \"min\": 0.0,\n        \"max\": 1.3020833333333333,\n        \"num_unique_values\": 199,\n        \"samples\": [\n          1.0477254474758708,\n          0.4442689294301031,\n          0.526211154032252\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07305789261721453,\n        \"min\": 0.00920390076307,\n        \"max\": 0.3719187514029253,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2139377276619699,\n          0.1411409869837444,\n          0.179106722738928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1045211048581407,\n        \"min\": 0.0240956852649266,\n        \"max\": 0.5875801775472288,\n        \"num_unique_values\": 1743,\n        \"samples\": [\n          0.2542014718063515,\n          0.0963050748632074,\n          0.2981013042650086\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11693820521873,\n        \"min\": -0.4849428251580988,\n        \"max\": 0.0001964099854771,\n        \"num_unique_values\": 1690,\n        \"samples\": [\n          -0.3692978195249415,\n          -0.2293080150255089,\n          -0.0586123631277146\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07359941186051065,\n        \"min\": 0.0113002939637815,\n        \"max\": 0.3575409237762914,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.2246937817743727,\n          0.0841563183334985,\n          0.196348489762948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6575209996463417,\n        \"min\": -2.014437145024604,\n        \"max\": 2.36357924407203,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          0.3789748234973433,\n          0.2924845766088112,\n          -0.1896406391904114\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0931158052676297,\n        \"min\": -1.847200391245828,\n        \"max\": 4.754529703967839,\n        \"num_unique_values\": 1800,\n        \"samples\": [\n          -1.4565572155424165,\n          1.2292382851240389,\n          -1.5653792746795052\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30444593562467026,\n        \"min\": 0.0,\n        \"max\": 1.7361111111111112,\n        \"num_unique_values\": 265,\n        \"samples\": [\n          0.0419052125987231,\n          0.1361512120260545,\n          1.6103752089033183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"DownRight\",\n          \"UpRight\",\n          \"Left\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":246}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 4))\n","total_Class = data_2['Label'].value_counts()\n","data_2['Label'].value_counts().plot.pie(autopct = '%.2f', fontsize=12)"],"metadata":{"id":"jRKcYrlCXKQu","executionInfo":{"status":"ok","timestamp":1723739165488,"user_tz":-360,"elapsed":38,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/","height":362},"outputId":"ae711ba9-ea09-4e83-dfb4-5bf2fb184c44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='count'>"]},"metadata":{},"execution_count":247},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","encoder2 = LabelEncoder()\n","data_2['Label'] = encoder2.fit_transform(data_2['Label'])"],"metadata":{"id":"vcYFGqJ8BQbj","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","column_mapping2  = {index: label for index , label in enumerate(encoder2.classes_)}\n","print(column_mapping2)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kv6V_iklJrSj","executionInfo":{"status":"ok","timestamp":1723739166462,"user_tz":-360,"elapsed":14,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"34c410d5-1498-481c-d8a7-c90e15679107"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 'DownRight', 1: 'Left', 2: 'Right', 3: 'UpRight'}\n"]}]},{"cell_type":"code","source":["y2 = data_2['Label']\n","x2= data_2.drop('Label',axis=1)"],"metadata":{"id":"QGvsAjqNBRvS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(x2, y2, test_size = 0.10, random_state = 32)"],"metadata":{"id":"PT2OFtKWBbzc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sc2 = StandardScaler()\n","\n","X_train2 = sc2.fit_transform(X_train2)\n","X_test2 = sc2.transform(X_test2)"],"metadata":{"id":"QTysh86jBgGn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","classifier2 = Sequential()\n","\n","# Adding the input layer and the first hidden layer\n","classifier2.add(Dense( 30, input_dim = 14,  activation = 'relu' ))\n","\n","# # Adding the input layer and the first hidden layer\n","classifier2.add(Dense(16,  activation = 'relu' ))\n","\n","\n","# Adding the output layer\n","classifier2.add(Dense(4, activation = 'softmax'))\n","\n","#%%                      Compiling the ANN\n","\n","classifier2.compile(optimizer = 'adam', loss = 'sparse_categorical_crossentropy',\n","                   metrics = ['accuracy'])"],"metadata":{"id":"GicalIbGYnL9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import time\n","\n","# Start the timer\n","start_time = time.time()\n","\n","\n","batch_size2= 32\n","epochs2 = 200\n","\n","history2 = classifier2.fit(X_train2, y_train2,\n","          batch_size=batch_size2,\n","          epochs=epochs2,\n","          validation_data=(X_test2, y_test2))\n","\n","# Stop the timer\n","end_time = time.time()\n","\n","# Calculate the elapsed time\n","elapsed_time = end_time - start_time\n","\n","# Print the elapsed time\n","print(\"Elapsed time: {:.2f} seconds\".format(elapsed_time))"],"metadata":{"collapsed":true,"id":"SpMpjrVTY1Kn","executionInfo":{"status":"ok","timestamp":1723739219041,"user_tz":-360,"elapsed":52584,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f9bbe36a-67ce-4eee-efae-ddb3c7c1604f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - accuracy: 0.2709 - loss: 1.4571 - val_accuracy: 0.5500 - val_loss: 1.1567\n","Epoch 2/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.5689 - loss: 1.0822 - val_accuracy: 0.5833 - val_loss: 0.9474\n","Epoch 3/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.5831 - loss: 0.9306 - val_accuracy: 0.6500 - val_loss: 0.8239\n","Epoch 4/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.6442 - loss: 0.8111 - val_accuracy: 0.6833 - val_loss: 0.7326\n","Epoch 5/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.6720 - loss: 0.7623 - val_accuracy: 0.7556 - val_loss: 0.6584\n","Epoch 6/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7187 - loss: 0.6942 - val_accuracy: 0.7833 - val_loss: 0.5998\n","Epoch 7/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7525 - loss: 0.6509 - val_accuracy: 0.7944 - val_loss: 0.5648\n","Epoch 8/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7699 - loss: 0.6126 - val_accuracy: 0.8278 - val_loss: 0.5199\n","Epoch 9/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7689 - loss: 0.5903 - val_accuracy: 0.8333 - val_loss: 0.4913\n","Epoch 10/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7988 - loss: 0.5281 - val_accuracy: 0.8222 - val_loss: 0.4595\n","Epoch 11/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7948 - loss: 0.5124 - val_accuracy: 0.8278 - val_loss: 0.4349\n","Epoch 12/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8009 - loss: 0.4830 - val_accuracy: 0.8500 - val_loss: 0.4117\n","Epoch 13/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7883 - loss: 0.4841 - val_accuracy: 0.8500 - val_loss: 0.3870\n","Epoch 14/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8064 - loss: 0.4500 - val_accuracy: 0.8556 - val_loss: 0.3711\n","Epoch 15/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8181 - loss: 0.4333 - val_accuracy: 0.8556 - val_loss: 0.3548\n","Epoch 16/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8137 - loss: 0.4320 - val_accuracy: 0.8722 - val_loss: 0.3398\n","Epoch 17/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8252 - loss: 0.4045 - val_accuracy: 0.8722 - val_loss: 0.3234\n","Epoch 18/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8191 - loss: 0.3913 - val_accuracy: 0.8944 - val_loss: 0.3154\n","Epoch 19/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8521 - loss: 0.3592 - val_accuracy: 0.9000 - val_loss: 0.3045\n","Epoch 20/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8547 - loss: 0.3560 - val_accuracy: 0.9111 - val_loss: 0.3034\n","Epoch 21/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8399 - loss: 0.3599 - val_accuracy: 0.9222 - val_loss: 0.2827\n","Epoch 22/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8780 - loss: 0.3295 - val_accuracy: 0.9222 - val_loss: 0.2715\n","Epoch 23/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8935 - loss: 0.3021 - val_accuracy: 0.9222 - val_loss: 0.2600\n","Epoch 24/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8901 - loss: 0.2991 - val_accuracy: 0.9389 - val_loss: 0.2491\n","Epoch 25/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8899 - loss: 0.2949 - val_accuracy: 0.9278 - val_loss: 0.2378\n","Epoch 26/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9073 - loss: 0.2640 - val_accuracy: 0.9444 - val_loss: 0.2379\n","Epoch 27/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9092 - loss: 0.2684 - val_accuracy: 0.9500 - val_loss: 0.2223\n","Epoch 28/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9265 - loss: 0.2474 - val_accuracy: 0.9444 - val_loss: 0.2272\n","Epoch 29/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9300 - loss: 0.2415 - val_accuracy: 0.9444 - val_loss: 0.2133\n","Epoch 30/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9108 - loss: 0.2495 - val_accuracy: 0.9444 - val_loss: 0.2068\n","Epoch 31/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9345 - loss: 0.2227 - val_accuracy: 0.9556 - val_loss: 0.2094\n","Epoch 32/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9374 - loss: 0.2134 - val_accuracy: 0.9556 - val_loss: 0.1953\n","Epoch 33/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9241 - loss: 0.2173 - val_accuracy: 0.9556 - val_loss: 0.1977\n","Epoch 34/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9423 - loss: 0.2064 - val_accuracy: 0.9556 - val_loss: 0.2009\n","Epoch 35/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9392 - loss: 0.2060 - val_accuracy: 0.9556 - val_loss: 0.1880\n","Epoch 36/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9476 - loss: 0.1884 - val_accuracy: 0.9444 - val_loss: 0.1889\n","Epoch 37/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9462 - loss: 0.1841 - val_accuracy: 0.9556 - val_loss: 0.1821\n","Epoch 38/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9448 - loss: 0.1838 - val_accuracy: 0.9556 - val_loss: 0.1851\n","Epoch 39/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9477 - loss: 0.1819 - val_accuracy: 0.9444 - val_loss: 0.1799\n","Epoch 40/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9582 - loss: 0.1615 - val_accuracy: 0.9556 - val_loss: 0.1766\n","Epoch 41/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9460 - loss: 0.1659 - val_accuracy: 0.9556 - val_loss: 0.1750\n","Epoch 42/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9607 - loss: 0.1590 - val_accuracy: 0.9556 - val_loss: 0.1678\n","Epoch 43/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9601 - loss: 0.1608 - val_accuracy: 0.9556 - val_loss: 0.1664\n","Epoch 44/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9517 - loss: 0.1604 - val_accuracy: 0.9611 - val_loss: 0.1683\n","Epoch 45/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9592 - loss: 0.1529 - val_accuracy: 0.9611 - val_loss: 0.1565\n","Epoch 46/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9639 - loss: 0.1453 - val_accuracy: 0.9556 - val_loss: 0.1527\n","Epoch 47/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9686 - loss: 0.1315 - val_accuracy: 0.9556 - val_loss: 0.1581\n","Epoch 48/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9589 - loss: 0.1396 - val_accuracy: 0.9556 - val_loss: 0.1559\n","Epoch 49/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9617 - loss: 0.1328 - val_accuracy: 0.9611 - val_loss: 0.1476\n","Epoch 50/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9609 - loss: 0.1398 - val_accuracy: 0.9611 - val_loss: 0.1530\n","Epoch 51/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9567 - loss: 0.1343 - val_accuracy: 0.9611 - val_loss: 0.1500\n","Epoch 52/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9595 - loss: 0.1273 - val_accuracy: 0.9556 - val_loss: 0.1570\n","Epoch 53/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9696 - loss: 0.1311 - val_accuracy: 0.9556 - val_loss: 0.1413\n","Epoch 54/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9671 - loss: 0.1251 - val_accuracy: 0.9667 - val_loss: 0.1466\n","Epoch 55/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9741 - loss: 0.1191 - val_accuracy: 0.9611 - val_loss: 0.1450\n","Epoch 56/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9719 - loss: 0.1076 - val_accuracy: 0.9667 - val_loss: 0.1419\n","Epoch 57/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9735 - loss: 0.1113 - val_accuracy: 0.9611 - val_loss: 0.1478\n","Epoch 58/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9764 - loss: 0.1059 - val_accuracy: 0.9556 - val_loss: 0.1391\n","Epoch 59/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9755 - loss: 0.1081 - val_accuracy: 0.9722 - val_loss: 0.1411\n","Epoch 60/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9770 - loss: 0.1020 - val_accuracy: 0.9611 - val_loss: 0.1450\n","Epoch 61/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9740 - loss: 0.1069 - val_accuracy: 0.9667 - val_loss: 0.1487\n","Epoch 62/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9787 - loss: 0.1000 - val_accuracy: 0.9667 - val_loss: 0.1504\n","Epoch 63/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9790 - loss: 0.1020 - val_accuracy: 0.9611 - val_loss: 0.1349\n","Epoch 64/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9720 - loss: 0.1034 - val_accuracy: 0.9667 - val_loss: 0.1381\n","Epoch 65/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9833 - loss: 0.0889 - val_accuracy: 0.9667 - val_loss: 0.1386\n","Epoch 66/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9783 - loss: 0.0973 - val_accuracy: 0.9667 - val_loss: 0.1418\n","Epoch 67/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9761 - loss: 0.0940 - val_accuracy: 0.9667 - val_loss: 0.1398\n","Epoch 68/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9741 - loss: 0.0930 - val_accuracy: 0.9667 - val_loss: 0.1450\n","Epoch 69/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9759 - loss: 0.0955 - val_accuracy: 0.9667 - val_loss: 0.1358\n","Epoch 70/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9798 - loss: 0.0846 - val_accuracy: 0.9667 - val_loss: 0.1377\n","Epoch 71/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9830 - loss: 0.0794 - val_accuracy: 0.9667 - val_loss: 0.1380\n","Epoch 72/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9826 - loss: 0.0771 - val_accuracy: 0.9667 - val_loss: 0.1361\n","Epoch 73/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9865 - loss: 0.0726 - val_accuracy: 0.9667 - val_loss: 0.1436\n","Epoch 74/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0751 - val_accuracy: 0.9667 - val_loss: 0.1373\n","Epoch 75/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9832 - loss: 0.0760 - val_accuracy: 0.9667 - val_loss: 0.1417\n","Epoch 76/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9830 - loss: 0.0666 - val_accuracy: 0.9667 - val_loss: 0.1470\n","Epoch 77/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9830 - loss: 0.0711 - val_accuracy: 0.9667 - val_loss: 0.1465\n","Epoch 78/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9808 - loss: 0.0727 - val_accuracy: 0.9722 - val_loss: 0.1405\n","Epoch 79/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9850 - loss: 0.0678 - val_accuracy: 0.9667 - val_loss: 0.1459\n","Epoch 80/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9803 - loss: 0.0662 - val_accuracy: 0.9667 - val_loss: 0.1521\n","Epoch 81/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9881 - loss: 0.0621 - val_accuracy: 0.9722 - val_loss: 0.1444\n","Epoch 82/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9842 - loss: 0.0641 - val_accuracy: 0.9667 - val_loss: 0.1344\n","Epoch 83/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9859 - loss: 0.0552 - val_accuracy: 0.9667 - val_loss: 0.1504\n","Epoch 84/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9794 - loss: 0.0691 - val_accuracy: 0.9667 - val_loss: 0.1359\n","Epoch 85/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9852 - loss: 0.0611 - val_accuracy: 0.9667 - val_loss: 0.1405\n","Epoch 86/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9830 - loss: 0.0671 - val_accuracy: 0.9667 - val_loss: 0.1475\n","Epoch 87/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9842 - loss: 0.0623 - val_accuracy: 0.9667 - val_loss: 0.1458\n","Epoch 88/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9838 - loss: 0.0581 - val_accuracy: 0.9667 - val_loss: 0.1364\n","Epoch 89/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9871 - loss: 0.0544 - val_accuracy: 0.9667 - val_loss: 0.1559\n","Epoch 90/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9847 - loss: 0.0586 - val_accuracy: 0.9667 - val_loss: 0.1340\n","Epoch 91/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9895 - loss: 0.0526 - val_accuracy: 0.9722 - val_loss: 0.1425\n","Epoch 92/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9905 - loss: 0.0483 - val_accuracy: 0.9722 - val_loss: 0.1525\n","Epoch 93/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9876 - loss: 0.0543 - val_accuracy: 0.9778 - val_loss: 0.1448\n","Epoch 94/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9908 - loss: 0.0492 - val_accuracy: 0.9722 - val_loss: 0.1445\n","Epoch 95/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9920 - loss: 0.0439 - val_accuracy: 0.9778 - val_loss: 0.1353\n","Epoch 96/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9921 - loss: 0.0471 - val_accuracy: 0.9722 - val_loss: 0.1559\n","Epoch 97/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9803 - loss: 0.0567 - val_accuracy: 0.9722 - val_loss: 0.1422\n","Epoch 98/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9920 - loss: 0.0454 - val_accuracy: 0.9722 - val_loss: 0.1594\n","Epoch 99/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9798 - loss: 0.0626 - val_accuracy: 0.9778 - val_loss: 0.1442\n","Epoch 100/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9888 - loss: 0.0466 - val_accuracy: 0.9778 - val_loss: 0.1514\n","Epoch 101/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9917 - loss: 0.0440 - val_accuracy: 0.9778 - val_loss: 0.1416\n","Epoch 102/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9923 - loss: 0.0465 - val_accuracy: 0.9667 - val_loss: 0.1473\n","Epoch 103/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9900 - loss: 0.0440 - val_accuracy: 0.9778 - val_loss: 0.1382\n","Epoch 104/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9876 - loss: 0.0451 - val_accuracy: 0.9778 - val_loss: 0.1466\n","Epoch 105/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0419 - val_accuracy: 0.9667 - val_loss: 0.1620\n","Epoch 106/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9893 - loss: 0.0436 - val_accuracy: 0.9778 - val_loss: 0.1477\n","Epoch 107/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9917 - loss: 0.0395 - val_accuracy: 0.9722 - val_loss: 0.1541\n","Epoch 108/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9905 - loss: 0.0382 - val_accuracy: 0.9778 - val_loss: 0.1449\n","Epoch 109/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9962 - loss: 0.0356 - val_accuracy: 0.9778 - val_loss: 0.1543\n","Epoch 110/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9892 - loss: 0.0413 - val_accuracy: 0.9722 - val_loss: 0.1562\n","Epoch 111/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9906 - loss: 0.0394 - val_accuracy: 0.9722 - val_loss: 0.1494\n","Epoch 112/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9930 - loss: 0.0404 - val_accuracy: 0.9667 - val_loss: 0.1546\n","Epoch 113/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9947 - loss: 0.0358 - val_accuracy: 0.9778 - val_loss: 0.1491\n","Epoch 114/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9930 - loss: 0.0340 - val_accuracy: 0.9722 - val_loss: 0.1614\n","Epoch 115/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9909 - loss: 0.0398 - val_accuracy: 0.9722 - val_loss: 0.1414\n","Epoch 116/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9930 - loss: 0.0351 - val_accuracy: 0.9778 - val_loss: 0.1309\n","Epoch 117/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9932 - loss: 0.0369 - val_accuracy: 0.9722 - val_loss: 0.1511\n","Epoch 118/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9957 - loss: 0.0264 - val_accuracy: 0.9722 - val_loss: 0.1559\n","Epoch 119/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9944 - loss: 0.0345 - val_accuracy: 0.9722 - val_loss: 0.1532\n","Epoch 120/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9944 - loss: 0.0314 - val_accuracy: 0.9778 - val_loss: 0.1543\n","Epoch 121/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9963 - loss: 0.0304 - val_accuracy: 0.9722 - val_loss: 0.1541\n","Epoch 122/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9973 - loss: 0.0280 - val_accuracy: 0.9722 - val_loss: 0.1518\n","Epoch 123/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9941 - loss: 0.0324 - val_accuracy: 0.9667 - val_loss: 0.1630\n","Epoch 124/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9943 - loss: 0.0304 - val_accuracy: 0.9778 - val_loss: 0.1440\n","Epoch 125/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9983 - loss: 0.0228 - val_accuracy: 0.9778 - val_loss: 0.1607\n","Epoch 126/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9919 - loss: 0.0330 - val_accuracy: 0.9778 - val_loss: 0.1585\n","Epoch 127/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9929 - loss: 0.0283 - val_accuracy: 0.9722 - val_loss: 0.1625\n","Epoch 128/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9961 - loss: 0.0241 - val_accuracy: 0.9722 - val_loss: 0.1709\n","Epoch 129/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9934 - loss: 0.0278 - val_accuracy: 0.9722 - val_loss: 0.1581\n","Epoch 130/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9939 - loss: 0.0306 - val_accuracy: 0.9778 - val_loss: 0.1577\n","Epoch 131/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9961 - loss: 0.0235 - val_accuracy: 0.9722 - val_loss: 0.1599\n","Epoch 132/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9986 - loss: 0.0226 - val_accuracy: 0.9722 - val_loss: 0.1739\n","Epoch 133/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9910 - loss: 0.0328 - val_accuracy: 0.9778 - val_loss: 0.1593\n","Epoch 134/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9981 - loss: 0.0240 - val_accuracy: 0.9722 - val_loss: 0.1508\n","Epoch 135/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9979 - loss: 0.0204 - val_accuracy: 0.9722 - val_loss: 0.1640\n","Epoch 136/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9998 - loss: 0.0250 - val_accuracy: 0.9722 - val_loss: 0.1686\n","Epoch 137/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9951 - loss: 0.0251 - val_accuracy: 0.9722 - val_loss: 0.1588\n","Epoch 138/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9971 - loss: 0.0204 - val_accuracy: 0.9778 - val_loss: 0.1640\n","Epoch 139/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9957 - loss: 0.0213 - val_accuracy: 0.9722 - val_loss: 0.1632\n","Epoch 140/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9983 - loss: 0.0193 - val_accuracy: 0.9722 - val_loss: 0.1657\n","Epoch 141/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9970 - loss: 0.0210 - val_accuracy: 0.9722 - val_loss: 0.1661\n","Epoch 142/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9982 - loss: 0.0207 - val_accuracy: 0.9778 - val_loss: 0.1700\n","Epoch 143/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9975 - loss: 0.0204 - val_accuracy: 0.9722 - val_loss: 0.1848\n","Epoch 144/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9982 - loss: 0.0256 - val_accuracy: 0.9778 - val_loss: 0.1581\n","Epoch 145/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9926 - loss: 0.0322 - val_accuracy: 0.9778 - val_loss: 0.1533\n","Epoch 146/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9979 - loss: 0.0184 - val_accuracy: 0.9722 - val_loss: 0.1696\n","Epoch 147/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9968 - loss: 0.0201 - val_accuracy: 0.9667 - val_loss: 0.1642\n","Epoch 148/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9978 - loss: 0.0207 - val_accuracy: 0.9778 - val_loss: 0.1571\n","Epoch 149/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9987 - loss: 0.0172 - val_accuracy: 0.9722 - val_loss: 0.1723\n","Epoch 150/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9987 - loss: 0.0154 - val_accuracy: 0.9778 - val_loss: 0.1771\n","Epoch 151/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9983 - loss: 0.0169 - val_accuracy: 0.9778 - val_loss: 0.1715\n","Epoch 152/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9994 - loss: 0.0141 - val_accuracy: 0.9722 - val_loss: 0.1777\n","Epoch 153/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9970 - loss: 0.0185 - val_accuracy: 0.9778 - val_loss: 0.1689\n","Epoch 154/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9977 - loss: 0.0166 - val_accuracy: 0.9778 - val_loss: 0.1768\n","Epoch 155/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9972 - loss: 0.0169 - val_accuracy: 0.9722 - val_loss: 0.1886\n","Epoch 156/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9974 - loss: 0.0199 - val_accuracy: 0.9778 - val_loss: 0.1752\n","Epoch 157/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9969 - loss: 0.0178 - val_accuracy: 0.9778 - val_loss: 0.1730\n","Epoch 158/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9992 - loss: 0.0181 - val_accuracy: 0.9778 - val_loss: 0.1882\n","Epoch 159/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9989 - loss: 0.0169 - val_accuracy: 0.9778 - val_loss: 0.1690\n","Epoch 160/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9991 - loss: 0.0147 - val_accuracy: 0.9722 - val_loss: 0.1801\n","Epoch 161/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9987 - loss: 0.0153 - val_accuracy: 0.9778 - val_loss: 0.1732\n","Epoch 162/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9993 - loss: 0.0130 - val_accuracy: 0.9833 - val_loss: 0.1918\n","Epoch 163/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9993 - loss: 0.0131 - val_accuracy: 0.9722 - val_loss: 0.1699\n","Epoch 164/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9988 - loss: 0.0146 - val_accuracy: 0.9778 - val_loss: 0.1790\n","Epoch 165/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9956 - loss: 0.0188 - val_accuracy: 0.9778 - val_loss: 0.1696\n","Epoch 166/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9966 - loss: 0.0182 - val_accuracy: 0.9722 - val_loss: 0.1556\n","Epoch 167/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9945 - loss: 0.0245 - val_accuracy: 0.9833 - val_loss: 0.1719\n","Epoch 168/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9983 - loss: 0.0153 - val_accuracy: 0.9778 - val_loss: 0.1672\n","Epoch 169/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9986 - loss: 0.0146 - val_accuracy: 0.9778 - val_loss: 0.1624\n","Epoch 170/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9996 - loss: 0.0116 - val_accuracy: 0.9833 - val_loss: 0.1896\n","Epoch 171/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9989 - loss: 0.0130 - val_accuracy: 0.9778 - val_loss: 0.1811\n","Epoch 172/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9992 - loss: 0.0126 - val_accuracy: 0.9833 - val_loss: 0.1788\n","Epoch 173/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9973 - loss: 0.0164 - val_accuracy: 0.9778 - val_loss: 0.1696\n","Epoch 174/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9970 - loss: 0.0167 - val_accuracy: 0.9722 - val_loss: 0.1753\n","Epoch 175/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9983 - loss: 0.0134 - val_accuracy: 0.9833 - val_loss: 0.1770\n","Epoch 176/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9984 - loss: 0.0122 - val_accuracy: 0.9778 - val_loss: 0.1795\n","Epoch 177/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9997 - loss: 0.0090 - val_accuracy: 0.9778 - val_loss: 0.1962\n","Epoch 178/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9987 - loss: 0.0124 - val_accuracy: 0.9778 - val_loss: 0.1980\n","Epoch 179/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9981 - loss: 0.0123 - val_accuracy: 0.9722 - val_loss: 0.1843\n","Epoch 180/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9997 - loss: 0.0114 - val_accuracy: 0.9778 - val_loss: 0.1723\n","Epoch 181/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9986 - loss: 0.0136 - val_accuracy: 0.9778 - val_loss: 0.1821\n","Epoch 182/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9995 - loss: 0.0092 - val_accuracy: 0.9778 - val_loss: 0.1872\n","Epoch 183/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9986 - loss: 0.0120 - val_accuracy: 0.9778 - val_loss: 0.1970\n","Epoch 184/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9937 - loss: 0.0221 - val_accuracy: 0.9833 - val_loss: 0.2062\n","Epoch 185/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9969 - loss: 0.0147 - val_accuracy: 0.9778 - val_loss: 0.1855\n","Epoch 186/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9986 - loss: 0.0106 - val_accuracy: 0.9833 - val_loss: 0.2005\n","Epoch 187/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9989 - loss: 0.0100 - val_accuracy: 0.9833 - val_loss: 0.2004\n","Epoch 188/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9971 - loss: 0.0115 - val_accuracy: 0.9778 - val_loss: 0.1831\n","Epoch 189/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9991 - loss: 0.0095 - val_accuracy: 0.9833 - val_loss: 0.1917\n","Epoch 190/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9982 - loss: 0.0117 - val_accuracy: 0.9778 - val_loss: 0.1874\n","Epoch 191/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9996 - loss: 0.0094 - val_accuracy: 0.9778 - val_loss: 0.2021\n","Epoch 192/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9995 - loss: 0.0103 - val_accuracy: 0.9833 - val_loss: 0.1918\n","Epoch 193/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9976 - loss: 0.0120 - val_accuracy: 0.9833 - val_loss: 0.1953\n","Epoch 194/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9983 - loss: 0.0097 - val_accuracy: 0.9778 - val_loss: 0.1730\n","Epoch 195/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9994 - loss: 0.0077 - val_accuracy: 0.9833 - val_loss: 0.1966\n","Epoch 196/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9974 - loss: 0.0102 - val_accuracy: 0.9778 - val_loss: 0.1787\n","Epoch 197/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9992 - loss: 0.0098 - val_accuracy: 0.9778 - val_loss: 0.1900\n","Epoch 198/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9989 - loss: 0.0079 - val_accuracy: 0.9722 - val_loss: 0.2033\n","Epoch 199/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9989 - loss: 0.0080 - val_accuracy: 0.9778 - val_loss: 0.2020\n","Epoch 200/200\n","\u001b[1m51/51\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9993 - loss: 0.0070 - val_accuracy: 0.9778 - val_loss: 0.1883\n","Elapsed time: 53.12 seconds\n"]}]},{"cell_type":"code","source":["\n","y_pred2 = classifier2.predict(X_test2)\n","y_pred2 = np.argmax(y_pred2, axis=1)\n","from sklearn.metrics import accuracy_score\n","accuracy2 = accuracy_score(y_test2, y_pred2)\n","print(\"Accuracy of the model:\", accuracy2)\n"],"metadata":{"id":"TFj3wmhqZQHg","executionInfo":{"status":"ok","timestamp":1723739219041,"user_tz":-360,"elapsed":26,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9bbb8e79-c4e8-4bc7-979e-848578c01aa7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m6/6\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\n","Accuracy of the model: 0.9777777777777777\n"]}]},{"cell_type":"code","source":["\n","from sklearn.metrics import classification_report\n","\n","print(classification_report(y_test2, y_pred2, target_names=column_mapping2.values()))\n"],"metadata":{"id":"sknnRSlhPd56","executionInfo":{"status":"ok","timestamp":1723739219041,"user_tz":-360,"elapsed":12,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"353bf3e7-e54b-4e3a-e57d-c75ad42c1a66"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","   DownRight       0.96      0.96      0.96        28\n","        Left       0.98      1.00      0.99        86\n","       Right       1.00      0.94      0.97        31\n","     UpRight       0.97      0.97      0.97        35\n","\n","    accuracy                           0.98       180\n","   macro avg       0.98      0.97      0.97       180\n","weighted avg       0.98      0.98      0.98       180\n","\n"]}]},{"cell_type":"code","source":["\n","\n","from sklearn.metrics import precision_score, recall_score, f1_score\n","\n","# Calculate precision\n","precision = precision_score(y_test2, y_pred2, average='weighted')\n","\n","# Calculate recall\n","recall = recall_score(y_test2, y_pred2, average='weighted')\n","\n","# Calculate F1-score\n","f1 = f1_score(y_test2, y_pred2, average='weighted')\n","\n","print(\"Accuracy:\", accuracy2)\n","print(\"Precision:\", precision)\n","print(\"Recall:\", recall)\n","print(\"F1-score:\", f1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XTcxslOymnf8","executionInfo":{"status":"ok","timestamp":1723739219042,"user_tz":-360,"elapsed":11,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"d73a2023-2a41-4efe-ac3b-5a4cf1eb770f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9777777777777777\n","Precision: 0.9780303030303031\n","Recall: 0.9777777777777777\n","F1-score: 0.9776564495530012\n"]}]},{"cell_type":"code","source":["\n","validation_data = data.sample(frac=0.2, random_state=32)\n","\n","start_time = time.time()\n","y_pred_validation = classifier2.predict(validation_data.drop('Label', axis=1))  # Assuming 'label' is your target variable column\n","end_time = time.time()\n","validation_time = end_time - start_time\n","print(\"Validation time: {:.2f} seconds\".format(validation_time))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bVFXc5lKhNdJ","executionInfo":{"status":"ok","timestamp":1723739219042,"user_tz":-360,"elapsed":9,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"fe4335f2-dfad-4151-d8c6-b47492595f41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step \n","Validation time: 0.24 seconds\n"]}]},{"cell_type":"code","source":["\n","plt.figure(figsize=(20, 5))\n","plt.plot(history2.history['val_loss'])\n","plt.title('Epoch vs Validation Loss')\n","plt.ylabel('Validation Loss')\n","plt.xlabel('Epoch')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"3ERTPrdgglAP","executionInfo":{"status":"ok","timestamp":1723739220181,"user_tz":-360,"elapsed":1145,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"432b1795-0ec1-4843-f0b1-e0da69196449"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"8Gjwp91NhPGM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# classifier2.save('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Models/Two Channel/oversample/ANN2n.h5')"],"metadata":{"id":"JdnZprQHl9v_","executionInfo":{"status":"ok","timestamp":1723739276959,"user_tz":-360,"elapsed":496,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"b79cc0e0-bba7-4549-a788-bf3cd0e44f66"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]}]},{"cell_type":"code","source":["# # # # # Save the scalers\n","\n","# with open('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Models/Two Channel/oversample/scl_ANN2n.pkl', 'wb') as f:\n","#     pickle.dump(sc2, f)"],"metadata":{"id":"TJETgLq9eJJT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"htAtR8P7h5-7"},"execution_count":null,"outputs":[]}]}