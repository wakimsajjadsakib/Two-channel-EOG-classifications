{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"100P36okVsm2xV7Nj12Ng4nGD1We0FlkP","authorship_tag":"ABX9TyPQo9jkQ44VRTRyNVBVtfXC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"XhGKlPUBAwl2"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sn\n","\n","from sklearn.preprocessing import LabelEncoder\n","from imblearn.over_sampling import SMOTE\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","\n","import tensorflow\n","from tensorflow import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from sklearn.utils import shuffle\n","\n","\n","\n","\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Conv1D, MaxPooling1D, Flatten\n","from tensorflow.keras.optimizers import Adam\n","\n","\n","import pickle\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"code","source":["\n","data = pd.read_csv('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Dataset/Training_dataset.csv')\n","\n","# data = data.iloc[:, -8:]\n"],"metadata":{"id":"im5AIL8sAyam"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y = data['Label']\n","x = data.drop('Label',axis=1)"],"metadata":{"id":"J7U2amGmHlRc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sm = SMOTE(random_state=32)\n","classes_to_oversample3 = {'DownLeft':300 , 'UpLeft':300, 'UpRight':300, 'DownRight':300, 'Right':300, 'Left':300, 'Down':300,'UP':300, 'Blink': 300}\n","\n","x_smote, y_smote = SMOTE(sampling_strategy=classes_to_oversample3, random_state=0).fit_resample(x, y)"],"metadata":{"id":"DTXzHTMqHiu7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# # Encode labels\n","# le = LabelEncoder()\n","# y_encoded = le.fit_transform(y)  # Encoding original labels\n","# y_smote_encoded = le.transform(y_smote)  # Transform SMOTE labels to match encoding\n"],"metadata":{"id":"_e5XaXYrHrIN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from scipy import stats\n","le = LabelEncoder()\n","le.fit(data['Label'])\n","# Define class names from original labels\n","class_names = le.classes_\n","\n","# Dictionary to store p-values\n","p_values = {}\n","\n","# Perform KS test for each class\n","for class_name in class_names:\n","    # Extract data for the current class from the original and SMOTE datasets\n","    original_class_data = x[y == class_name].to_numpy()  # Convert to NumPy array\n","    smote_class_data = x_smote[y_smote == class_name].to_numpy()  # Convert to NumPy array\n","\n","    # Flatten the arrays if they are multi-dimensional\n","    original_class_data = original_class_data.flatten()\n","    smote_class_data = smote_class_data.flatten()\n","\n","    # Check for NaN or infinite values and remove them\n","    original_class_data = original_class_data[~np.isnan(original_class_data) & ~np.isinf(original_class_data)]\n","    smote_class_data = smote_class_data[~np.isnan(smote_class_data) & ~np.isinf(smote_class_data)]\n","\n","    # Check if there is sufficient data left for the test\n","    if len(original_class_data) > 0 and len(smote_class_data) > 0:\n","        # Perform Kolmogorov-Smirnov test\n","        ks_statistic, p_value = stats.ks_2samp(original_class_data, smote_class_data)\n","        p_values[class_name] = p_value\n","    else:\n","        p_values[class_name] = np.nan\n","\n","# Print p-values and interpret results\n","for class_name, p_value in p_values.items():\n","    print(f\"Class: {class_name}, P-value: {p_value}\")\n","    if np.isnan(p_value):\n","        print(f\"Class {class_name}: Insufficient data or unable to perform test.\")\n","    elif p_value < 0.05:\n","        print(f\"Class {class_name}: Significant difference in distribution (p-value: {p_value})\")\n","    else:\n","        print(f\"Class {class_name}: No significant difference in distribution (p-value: {p_value})\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kjYIMCNNKcVl","executionInfo":{"status":"ok","timestamp":1723738144854,"user_tz":-360,"elapsed":5,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"4eb5d68d-b045-4718-8afe-83d7235de816"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Class: Blink, P-value: 0.7157111719502327\n","Class Blink: No significant difference in distribution (p-value: 0.7157111719502327)\n","Class: Down, P-value: 0.6209005594712195\n","Class Down: No significant difference in distribution (p-value: 0.6209005594712195)\n","Class: DownLeft, P-value: 0.802847626221548\n","Class DownLeft: No significant difference in distribution (p-value: 0.802847626221548)\n","Class: DownRight, P-value: 0.9999695846877983\n","Class DownRight: No significant difference in distribution (p-value: 0.9999695846877983)\n","Class: Left, P-value: 0.9300097167043613\n","Class Left: No significant difference in distribution (p-value: 0.9300097167043613)\n","Class: Right, P-value: 0.9514217101826274\n","Class Right: No significant difference in distribution (p-value: 0.9514217101826274)\n","Class: UP, P-value: 0.8529286977238851\n","Class UP: No significant difference in distribution (p-value: 0.8529286977238851)\n","Class: UpLeft, P-value: 0.9070273846826541\n","Class UpLeft: No significant difference in distribution (p-value: 0.9070273846826541)\n","Class: UpRight, P-value: 0.558351576765677\n","Class UpRight: No significant difference in distribution (p-value: 0.558351576765677)\n"]}]},{"cell_type":"code","source":["# from scipy.stats import f_oneway\n","\n","# f_oneway(y_encoded , y_smote_encoded)"],"metadata":{"id":"wRw5q4SJHrKc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.DataFrame(x_smote)\n","data['Label'] = y_smote"],"metadata":{"id":"kMUL80fYHrNw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"gxV_uofRzxuz","executionInfo":{"status":"ok","timestamp":1723737638762,"user_tz":-360,"elapsed":8,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"2fbc41ee-98b9-4a36-c699-ff5c02a6b84d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CH1_mean   CH1_max   CH1_min   CH1_std  CH1_skewness  CH1_kurtosis  \\\n","0     0.022389  0.000485 -0.049438  0.011328     -0.525205     -0.217967   \n","1     0.017667  0.055027 -0.015088  0.019140      0.624257     -0.407028   \n","2     0.010616  0.021808 -0.017455  0.012056      0.351023     -1.242023   \n","3     0.013873  0.028911 -0.019742  0.014628      0.060673     -1.600967   \n","4     0.007213  0.015612 -0.022637  0.008863     -1.056253      0.866871   \n","...        ...       ...       ...       ...           ...           ...   \n","2695  0.301566  0.402387 -0.411169  0.317360      0.357206     -1.542943   \n","2696  0.165523  0.226617 -0.332358  0.182890     -0.295549     -1.389136   \n","2697  0.261627  0.303234 -0.395024  0.257394      0.482207     -1.455302   \n","2698  0.307804  0.417190 -0.444832  0.309003     -0.626304     -1.301949   \n","2699  0.295987  0.380700 -0.427437  0.308420      0.317964     -1.580125   \n","\n","      Ch1_freq_dom  CH2_mean   CH2_max   CH2_min   CH2_std  CH2_skewness  \\\n","0         0.000000  0.251783  0.645863 -0.225991  0.290063      1.288788   \n","1         0.000000  0.237017  0.618576 -0.192354  0.283997      0.935800   \n","2         0.434028  0.231079  0.526342 -0.207111  0.267068      0.967346   \n","3         0.868056  0.226873  0.570502 -0.206747  0.261074      1.339687   \n","4         0.868056  0.268975  0.647510 -0.228743  0.318560      0.845475   \n","...            ...       ...       ...       ...       ...           ...   \n","2695      0.868056  0.122589  0.199695 -0.200491  0.129523      0.299095   \n","2696      0.434028  0.189057  0.373926 -0.387650  0.223576      0.030336   \n","2697      0.434028  0.186010  0.224392 -0.239608  0.183464      0.642096   \n","2698      0.434028  0.143581  0.302274 -0.221421  0.147676     -0.385110   \n","2699      0.868056  0.140934  0.213650 -0.210654  0.148610      0.332107   \n","\n","      CH2_kurtosis  CH2_freq_dom    Label  \n","0         0.059286      0.434028    Blink  \n","1        -0.762640      0.434028    Blink  \n","2        -0.775608      0.434028    Blink  \n","3         0.165355      0.434028    Blink  \n","4        -0.991855      0.434028    Blink  \n","...            ...           ...      ...  \n","2695     -1.506270      0.868056  UpRight  \n","2696     -0.982925      0.434028  UpRight  \n","2697     -1.419709      0.434028  UpRight  \n","2698     -0.942153      0.434028  UpRight  \n","2699     -1.500131      0.868056  UpRight  \n","\n","[2700 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-cb95f20f-bd2e-468f-a1d6-219c47cf965b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CH1_mean</th>\n","      <th>CH1_max</th>\n","      <th>CH1_min</th>\n","      <th>CH1_std</th>\n","      <th>CH1_skewness</th>\n","      <th>CH1_kurtosis</th>\n","      <th>Ch1_freq_dom</th>\n","      <th>CH2_mean</th>\n","      <th>CH2_max</th>\n","      <th>CH2_min</th>\n","      <th>CH2_std</th>\n","      <th>CH2_skewness</th>\n","      <th>CH2_kurtosis</th>\n","      <th>CH2_freq_dom</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.022389</td>\n","      <td>0.000485</td>\n","      <td>-0.049438</td>\n","      <td>0.011328</td>\n","      <td>-0.525205</td>\n","      <td>-0.217967</td>\n","      <td>0.000000</td>\n","      <td>0.251783</td>\n","      <td>0.645863</td>\n","      <td>-0.225991</td>\n","      <td>0.290063</td>\n","      <td>1.288788</td>\n","      <td>0.059286</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.017667</td>\n","      <td>0.055027</td>\n","      <td>-0.015088</td>\n","      <td>0.019140</td>\n","      <td>0.624257</td>\n","      <td>-0.407028</td>\n","      <td>0.000000</td>\n","      <td>0.237017</td>\n","      <td>0.618576</td>\n","      <td>-0.192354</td>\n","      <td>0.283997</td>\n","      <td>0.935800</td>\n","      <td>-0.762640</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.010616</td>\n","      <td>0.021808</td>\n","      <td>-0.017455</td>\n","      <td>0.012056</td>\n","      <td>0.351023</td>\n","      <td>-1.242023</td>\n","      <td>0.434028</td>\n","      <td>0.231079</td>\n","      <td>0.526342</td>\n","      <td>-0.207111</td>\n","      <td>0.267068</td>\n","      <td>0.967346</td>\n","      <td>-0.775608</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.013873</td>\n","      <td>0.028911</td>\n","      <td>-0.019742</td>\n","      <td>0.014628</td>\n","      <td>0.060673</td>\n","      <td>-1.600967</td>\n","      <td>0.868056</td>\n","      <td>0.226873</td>\n","      <td>0.570502</td>\n","      <td>-0.206747</td>\n","      <td>0.261074</td>\n","      <td>1.339687</td>\n","      <td>0.165355</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.007213</td>\n","      <td>0.015612</td>\n","      <td>-0.022637</td>\n","      <td>0.008863</td>\n","      <td>-1.056253</td>\n","      <td>0.866871</td>\n","      <td>0.868056</td>\n","      <td>0.268975</td>\n","      <td>0.647510</td>\n","      <td>-0.228743</td>\n","      <td>0.318560</td>\n","      <td>0.845475</td>\n","      <td>-0.991855</td>\n","      <td>0.434028</td>\n","      <td>Blink</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2695</th>\n","      <td>0.301566</td>\n","      <td>0.402387</td>\n","      <td>-0.411169</td>\n","      <td>0.317360</td>\n","      <td>0.357206</td>\n","      <td>-1.542943</td>\n","      <td>0.868056</td>\n","      <td>0.122589</td>\n","      <td>0.199695</td>\n","      <td>-0.200491</td>\n","      <td>0.129523</td>\n","      <td>0.299095</td>\n","      <td>-1.506270</td>\n","      <td>0.868056</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2696</th>\n","      <td>0.165523</td>\n","      <td>0.226617</td>\n","      <td>-0.332358</td>\n","      <td>0.182890</td>\n","      <td>-0.295549</td>\n","      <td>-1.389136</td>\n","      <td>0.434028</td>\n","      <td>0.189057</td>\n","      <td>0.373926</td>\n","      <td>-0.387650</td>\n","      <td>0.223576</td>\n","      <td>0.030336</td>\n","      <td>-0.982925</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2697</th>\n","      <td>0.261627</td>\n","      <td>0.303234</td>\n","      <td>-0.395024</td>\n","      <td>0.257394</td>\n","      <td>0.482207</td>\n","      <td>-1.455302</td>\n","      <td>0.434028</td>\n","      <td>0.186010</td>\n","      <td>0.224392</td>\n","      <td>-0.239608</td>\n","      <td>0.183464</td>\n","      <td>0.642096</td>\n","      <td>-1.419709</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2698</th>\n","      <td>0.307804</td>\n","      <td>0.417190</td>\n","      <td>-0.444832</td>\n","      <td>0.309003</td>\n","      <td>-0.626304</td>\n","      <td>-1.301949</td>\n","      <td>0.434028</td>\n","      <td>0.143581</td>\n","      <td>0.302274</td>\n","      <td>-0.221421</td>\n","      <td>0.147676</td>\n","      <td>-0.385110</td>\n","      <td>-0.942153</td>\n","      <td>0.434028</td>\n","      <td>UpRight</td>\n","    </tr>\n","    <tr>\n","      <th>2699</th>\n","      <td>0.295987</td>\n","      <td>0.380700</td>\n","      <td>-0.427437</td>\n","      <td>0.308420</td>\n","      <td>0.317964</td>\n","      <td>-1.580125</td>\n","      <td>0.868056</td>\n","      <td>0.140934</td>\n","      <td>0.213650</td>\n","      <td>-0.210654</td>\n","      <td>0.148610</td>\n","      <td>0.332107</td>\n","      <td>-1.500131</td>\n","      <td>0.868056</td>\n","      <td>UpRight</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2700 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb95f20f-bd2e-468f-a1d6-219c47cf965b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb95f20f-bd2e-468f-a1d6-219c47cf965b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb95f20f-bd2e-468f-a1d6-219c47cf965b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d4e8ef08-2d11-495f-b041-4fd78637e644\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d4e8ef08-2d11-495f-b041-4fd78637e644')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d4e8ef08-2d11-495f-b041-4fd78637e644 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b7aa6a33-07ea-4615-844c-6a4f304c0c0e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b7aa6a33-07ea-4615-844c-6a4f304c0c0e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 2700,\n  \"fields\": [\n    {\n      \"column\": \"CH1_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0968398728761376,\n        \"min\": 0.0043111692562194,\n        \"max\": 0.4399770722771949,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.16782482648254177,\n          0.2161942020024666,\n          0.2108050455338866\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13318494143231074,\n        \"min\": -0.0263145814806003,\n        \"max\": 0.6545135494739446,\n        \"num_unique_values\": 2579,\n        \"samples\": [\n          0.019575531053270166,\n          0.23015558137677547,\n          0.029846862590109588\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13920559235498509,\n        \"min\": -0.560178276187429,\n        \"max\": 0.0068669972904928,\n        \"num_unique_values\": 2586,\n        \"samples\": [\n          -0.2436919319072137,\n          -0.24258179109342698,\n          -0.3423383843317506\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09848428545687506,\n        \"min\": 0.0051882649730402,\n        \"max\": 0.4526528445752015,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.1789837957819208,\n          0.21522030975810696,\n          0.21853536142082536\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6754151729293391,\n        \"min\": -2.1555636990066067,\n        \"max\": 2.2947342472229986,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.21041366167485395,\n          0.44370765485402514,\n          0.05010891854018463\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH1_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0399220477103095,\n        \"min\": -1.8996503346460245,\n        \"max\": 5.870491682445996,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          -1.653084452415282,\n          -1.5706084430936464,\n          -1.832108125582695\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ch1_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2813321914192973,\n        \"min\": 0.0,\n        \"max\": 1.7361111111111112,\n        \"num_unique_values\": 431,\n        \"samples\": [\n          0.4873563516140459,\n          0.7495851834684585,\n          0.813874541019928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07480950273523644,\n        \"min\": 0.00920390076307,\n        \"max\": 0.4615068636424269,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.05303329803336025,\n          0.18432084802381982,\n          0.1895412677394529\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1257907898935406,\n        \"min\": 0.0240956852649266,\n        \"max\": 0.8334965567674951,\n        \"num_unique_values\": 2600,\n        \"samples\": [\n          0.40117864011460014,\n          0.2906340277176857,\n          0.140068217120503\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11555110578965509,\n        \"min\": -0.6921206005084612,\n        \"max\": 0.0782941463413214,\n        \"num_unique_values\": 2530,\n        \"samples\": [\n          -0.19229347961171148,\n          -0.07571148153744227,\n          -0.2751707465082151\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07778002060721306,\n        \"min\": 0.0113002939637815,\n        \"max\": 0.506757371274597,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          0.05912586162625065,\n          0.18382588271997058,\n          0.20203036662695464\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_skewness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6690742976225065,\n        \"min\": -2.014437145024604,\n        \"max\": 2.36357924407203,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          -0.63956908139543,\n          0.1842287722466059,\n          -0.12668769178499997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_kurtosis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0861982401464638,\n        \"min\": -1.847200391245828,\n        \"max\": 4.754529703967839,\n        \"num_unique_values\": 2700,\n        \"samples\": [\n          -1.0624566439599448,\n          -1.7252113853640187,\n          -1.706702712566729\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CH2_freq_dom\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3350417848199592,\n        \"min\": 0.0,\n        \"max\": 3.4722222222222223,\n        \"num_unique_values\": 439,\n        \"samples\": [\n          1.033645720697592,\n          0.43822094297018044,\n          0.8092560485145616\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"DownLeft\",\n          \"Left\",\n          \"UpLeft\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["data['Label'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"i-jF4aysar2J","executionInfo":{"status":"ok","timestamp":1723737642661,"user_tz":-360,"elapsed":7,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"378e5db0-a3ec-457d-9f26-dd0f1590d600"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","Blink        300\n","Left         300\n","Right        300\n","UP           300\n","Down         300\n","UpLeft       300\n","UpRight      300\n","DownLeft     300\n","DownRight    300\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Blink</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Left</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Right</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UP</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>Down</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UpLeft</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>UpRight</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>DownLeft</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>DownRight</th>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["# prompt: save data\n","\n","# data.to_csv('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Dataset/Training_dataset_300.csv', index=False)\n"],"metadata":{"id":"Fy-UIWTvxR3e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.utils import shuffle\n","# Shuffle the dataset\n","data= shuffle(data, random_state=32)\n","data.reset_index(drop=True, inplace=True)"],"metadata":{"id":"qDHty85OfA33"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_3 = data[data['Label'].isin(['Left','DownLeft','UpLeft'])]\n","\n","data_3.index = range(len(data_3))\n","# data_3 = data.copy()"],"metadata":{"id":"KXnY6h4QMAXK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 4))\n","total_Class = data_3['Label'].value_counts()\n","data_3['Label'].value_counts().plot.pie(autopct = '%.2f', fontsize=12)"],"metadata":{"id":"WKJ-t21dXLAr","executionInfo":{"status":"ok","timestamp":1723737475307,"user_tz":-360,"elapsed":26,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/","height":362},"outputId":"2f6242ba-9cf8-4416-e764-3531732e0d63"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='count'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["encoder3 = LabelEncoder()\n","\n","data_3['Label'] = encoder3.fit_transform(data_3['Label'])"],"metadata":{"id":"vcYFGqJ8BQbj","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["column_mapping3  = {index: label for index , label in enumerate(encoder3.classes_)}\n","\n","print(column_mapping3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kv6V_iklJrSj","executionInfo":{"status":"ok","timestamp":1723737475307,"user_tz":-360,"elapsed":24,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"09781c12-c5f9-46d0-a1e9-606df1e07704"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 'DownLeft', 1: 'Left', 2: 'UpLeft'}\n"]}]},{"cell_type":"code","source":["y3 = data_3['Label']\n","x3= data_3.drop('Label',axis=1)"],"metadata":{"id":"QGvsAjqNBRvS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y3.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"n2_4PvclN6am","executionInfo":{"status":"ok","timestamp":1723737476099,"user_tz":-360,"elapsed":812,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"47264536-e3e1-4de5-ba0a-b982f5de1693"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","1    300\n","0    300\n","2    300\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["X_train3, X_test3, y_train3, y_test3 = train_test_split(x3, y3, test_size = 0.20, random_state = 0)"],"metadata":{"id":"PT2OFtKWBbzc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_train3.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"sjVkh6PvMQcY","executionInfo":{"status":"ok","timestamp":1723737476101,"user_tz":-360,"elapsed":21,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"4838008b-c55d-4f47-b166-867539b22d57"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","2    246\n","1    238\n","0    236\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>246</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>238</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>236</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["y_test3.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"6FAZFqlaMUgC","executionInfo":{"status":"ok","timestamp":1723737476101,"user_tz":-360,"elapsed":19,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"2aa45fdc-6d8d-48fc-ddcb-b1d06591d7d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","0    64\n","1    62\n","2    54\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>54</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["sc3 = StandardScaler()\n","\n","X_train3 = sc3.fit_transform(X_train3)\n","X_test3 = sc3.transform(X_test3)"],"metadata":{"id":"QTysh86jBgGn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","classifier3 = Sequential()\n","\n","# Adding the input layer and the first hidden layer\n","classifier3.add(Dense( 30, input_dim = 14,  activation = 'relu' ))\n","\n","# # Adding the input layer and the first hidden layer\n","classifier3.add(Dense( 16,  activation = 'relu' ))\n","\n","\n","# Adding the output layer\n","classifier3.add(Dense(3, activation = 'softmax'))\n","\n","#%%                      Compiling the ANN\n","\n","classifier3.compile(optimizer = 'adam', loss = 'sparse_categorical_crossentropy',\n","                   metrics = ['accuracy'])"],"metadata":{"id":"vEwWTXfdYnXx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import time\n","\n","# Start the timer\n","start_time = time.time()\n","\n","batch_size_cnn = 32\n","epochs_cnn = 200\n","\n","history_cnn = classifier3.fit(X_train3, y_train3,\n","          batch_size=batch_size_cnn,\n","          epochs=epochs_cnn,\n","          validation_data=(X_test3, y_test3))\n","\n","# Stop the timer\n","end_time = time.time()\n","\n","# Calculate the elapsed time\n","elapsed_time = end_time - start_time\n","\n","# Print the elapsed time\n","print(\"Elapsed time: {:.2f} seconds\".format(elapsed_time))"],"metadata":{"id":"yOXe7ao_Y1aH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1723737523081,"user_tz":-360,"elapsed":46995,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"1423206d-684b-4570-93fe-ebe28374e8a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 41ms/step - accuracy: 0.3817 - loss: 1.1344 - val_accuracy: 0.6111 - val_loss: 0.8734\n","Epoch 2/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.6508 - loss: 0.8258 - val_accuracy: 0.7667 - val_loss: 0.6835\n","Epoch 3/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - accuracy: 0.7578 - loss: 0.6438 - val_accuracy: 0.8222 - val_loss: 0.5595\n","Epoch 4/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - accuracy: 0.8326 - loss: 0.5262 - val_accuracy: 0.8611 - val_loss: 0.4732\n","Epoch 5/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 11ms/step - accuracy: 0.8783 - loss: 0.4409 - val_accuracy: 0.8833 - val_loss: 0.4009\n","Epoch 6/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.9207 - loss: 0.3451 - val_accuracy: 0.8833 - val_loss: 0.3437\n","Epoch 7/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - accuracy: 0.9282 - loss: 0.3027 - val_accuracy: 0.9056 - val_loss: 0.2973\n","Epoch 8/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 13ms/step - accuracy: 0.9212 - loss: 0.2699 - val_accuracy: 0.9167 - val_loss: 0.2612\n","Epoch 9/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - accuracy: 0.9502 - loss: 0.2246 - val_accuracy: 0.9222 - val_loss: 0.2339\n","Epoch 10/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.9455 - loss: 0.2004 - val_accuracy: 0.9333 - val_loss: 0.2109\n","Epoch 11/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.9576 - loss: 0.1660 - val_accuracy: 0.9389 - val_loss: 0.1904\n","Epoch 12/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - accuracy: 0.9588 - loss: 0.1587 - val_accuracy: 0.9333 - val_loss: 0.1739\n","Epoch 13/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.9616 - loss: 0.1532 - val_accuracy: 0.9389 - val_loss: 0.1575\n","Epoch 14/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - accuracy: 0.9729 - loss: 0.1252 - val_accuracy: 0.9389 - val_loss: 0.1466\n","Epoch 15/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9562 - loss: 0.1318 - val_accuracy: 0.9500 - val_loss: 0.1349\n","Epoch 16/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9748 - loss: 0.1080 - val_accuracy: 0.9667 - val_loss: 0.1253\n","Epoch 17/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 0.9774 - loss: 0.0979 - val_accuracy: 0.9667 - val_loss: 0.1161\n","Epoch 18/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.9851 - loss: 0.0774 - val_accuracy: 0.9667 - val_loss: 0.1099\n","Epoch 19/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.9834 - loss: 0.0808 - val_accuracy: 0.9667 - val_loss: 0.1026\n","Epoch 20/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 11ms/step - accuracy: 0.9932 - loss: 0.0651 - val_accuracy: 0.9722 - val_loss: 0.0967\n","Epoch 21/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9904 - loss: 0.0639 - val_accuracy: 0.9778 - val_loss: 0.0918\n","Epoch 22/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9923 - loss: 0.0649 - val_accuracy: 0.9722 - val_loss: 0.0858\n","Epoch 23/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 0.9969 - loss: 0.0473 - val_accuracy: 0.9778 - val_loss: 0.0824\n","Epoch 24/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.9965 - loss: 0.0565 - val_accuracy: 0.9778 - val_loss: 0.0787\n","Epoch 25/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - accuracy: 0.9953 - loss: 0.0495 - val_accuracy: 0.9778 - val_loss: 0.0756\n","Epoch 26/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.9906 - loss: 0.0563 - val_accuracy: 0.9778 - val_loss: 0.0717\n","Epoch 27/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 0.9972 - loss: 0.0470 - val_accuracy: 0.9778 - val_loss: 0.0683\n","Epoch 28/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9969 - loss: 0.0411 - val_accuracy: 0.9778 - val_loss: 0.0668\n","Epoch 29/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9964 - loss: 0.0406 - val_accuracy: 0.9778 - val_loss: 0.0630\n","Epoch 30/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9982 - loss: 0.0365 - val_accuracy: 0.9833 - val_loss: 0.0605\n","Epoch 31/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9964 - loss: 0.0364 - val_accuracy: 0.9833 - val_loss: 0.0593\n","Epoch 32/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9916 - loss: 0.0398 - val_accuracy: 0.9833 - val_loss: 0.0569\n","Epoch 33/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9994 - loss: 0.0274 - val_accuracy: 0.9833 - val_loss: 0.0556\n","Epoch 34/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9988 - loss: 0.0263 - val_accuracy: 0.9833 - val_loss: 0.0539\n","Epoch 35/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.9994 - loss: 0.0267 - val_accuracy: 0.9833 - val_loss: 0.0511\n","Epoch 36/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9985 - loss: 0.0229 - val_accuracy: 0.9833 - val_loss: 0.0494\n","Epoch 37/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9931 - loss: 0.0281 - val_accuracy: 0.9833 - val_loss: 0.0463\n","Epoch 38/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9998 - loss: 0.0238 - val_accuracy: 0.9833 - val_loss: 0.0460\n","Epoch 39/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9971 - loss: 0.0214 - val_accuracy: 0.9833 - val_loss: 0.0452\n","Epoch 40/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9990 - loss: 0.0215 - val_accuracy: 0.9833 - val_loss: 0.0436\n","Epoch 41/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9986 - loss: 0.0227 - val_accuracy: 0.9833 - val_loss: 0.0415\n","Epoch 42/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9991 - loss: 0.0209 - val_accuracy: 0.9833 - val_loss: 0.0417\n","Epoch 43/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9999 - loss: 0.0163 - val_accuracy: 0.9833 - val_loss: 0.0398\n","Epoch 44/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9995 - loss: 0.0169 - val_accuracy: 0.9833 - val_loss: 0.0377\n","Epoch 45/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9981 - loss: 0.0172 - val_accuracy: 0.9833 - val_loss: 0.0376\n","Epoch 46/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9996 - loss: 0.0141 - val_accuracy: 0.9833 - val_loss: 0.0363\n","Epoch 47/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9991 - loss: 0.0152 - val_accuracy: 0.9833 - val_loss: 0.0355\n","Epoch 48/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9991 - loss: 0.0139 - val_accuracy: 0.9833 - val_loss: 0.0348\n","Epoch 49/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0141 - val_accuracy: 0.9833 - val_loss: 0.0332\n","Epoch 50/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9990 - loss: 0.0134 - val_accuracy: 0.9889 - val_loss: 0.0332\n","Epoch 51/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 0.9994 - loss: 0.0121 - val_accuracy: 0.9889 - val_loss: 0.0321\n","Epoch 52/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 13ms/step - accuracy: 0.9990 - loss: 0.0127 - val_accuracy: 0.9889 - val_loss: 0.0317\n","Epoch 53/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - accuracy: 1.0000 - loss: 0.0130 - val_accuracy: 0.9833 - val_loss: 0.0309\n","Epoch 54/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 0.9985 - loss: 0.0116 - val_accuracy: 0.9889 - val_loss: 0.0301\n","Epoch 55/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0090 - val_accuracy: 0.9889 - val_loss: 0.0302\n","Epoch 56/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0087 - val_accuracy: 0.9889 - val_loss: 0.0286\n","Epoch 57/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 0.0098 - val_accuracy: 0.9889 - val_loss: 0.0283\n","Epoch 58/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 0.0111 - val_accuracy: 0.9889 - val_loss: 0.0282\n","Epoch 59/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0097 - val_accuracy: 0.9889 - val_loss: 0.0269\n","Epoch 60/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0095 - val_accuracy: 0.9889 - val_loss: 0.0255\n","Epoch 61/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 0.0103 - val_accuracy: 0.9889 - val_loss: 0.0264\n","Epoch 62/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0111 - val_accuracy: 0.9889 - val_loss: 0.0255\n","Epoch 63/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0087 - val_accuracy: 0.9889 - val_loss: 0.0249\n","Epoch 64/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0086 - val_accuracy: 0.9889 - val_loss: 0.0241\n","Epoch 65/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0076 - val_accuracy: 0.9889 - val_loss: 0.0243\n","Epoch 66/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0076 - val_accuracy: 0.9944 - val_loss: 0.0232\n","Epoch 67/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0077 - val_accuracy: 0.9944 - val_loss: 0.0237\n","Epoch 68/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0080 - val_accuracy: 0.9944 - val_loss: 0.0227\n","Epoch 69/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0081 - val_accuracy: 0.9944 - val_loss: 0.0219\n","Epoch 70/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0065 - val_accuracy: 0.9944 - val_loss: 0.0223\n","Epoch 71/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0059 - val_accuracy: 0.9944 - val_loss: 0.0213\n","Epoch 72/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0065 - val_accuracy: 0.9889 - val_loss: 0.0214\n","Epoch 73/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0056 - val_accuracy: 0.9944 - val_loss: 0.0207\n","Epoch 74/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0059 - val_accuracy: 0.9944 - val_loss: 0.0203\n","Epoch 75/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0058 - val_accuracy: 0.9944 - val_loss: 0.0206\n","Epoch 76/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0044 - val_accuracy: 1.0000 - val_loss: 0.0193\n","Epoch 77/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0056 - val_accuracy: 0.9944 - val_loss: 0.0206\n","Epoch 78/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0057 - val_accuracy: 0.9944 - val_loss: 0.0193\n","Epoch 79/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0043 - val_accuracy: 1.0000 - val_loss: 0.0189\n","Epoch 80/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0063 - val_accuracy: 0.9944 - val_loss: 0.0192\n","Epoch 81/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0049 - val_accuracy: 1.0000 - val_loss: 0.0182\n","Epoch 82/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0047 - val_accuracy: 0.9944 - val_loss: 0.0191\n","Epoch 83/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0039 - val_accuracy: 1.0000 - val_loss: 0.0169\n","Epoch 84/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0043 - val_accuracy: 1.0000 - val_loss: 0.0169\n","Epoch 85/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0043 - val_accuracy: 0.9944 - val_loss: 0.0176\n","Epoch 86/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0041 - val_accuracy: 0.9944 - val_loss: 0.0170\n","Epoch 87/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0039 - val_accuracy: 1.0000 - val_loss: 0.0166\n","Epoch 88/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0035 - val_accuracy: 1.0000 - val_loss: 0.0161\n","Epoch 89/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0037 - val_accuracy: 1.0000 - val_loss: 0.0165\n","Epoch 90/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0030 - val_accuracy: 1.0000 - val_loss: 0.0159\n","Epoch 91/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0031 - val_accuracy: 0.9944 - val_loss: 0.0168\n","Epoch 92/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0033 - val_accuracy: 1.0000 - val_loss: 0.0158\n","Epoch 93/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0031 - val_accuracy: 1.0000 - val_loss: 0.0152\n","Epoch 94/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0034 - val_accuracy: 1.0000 - val_loss: 0.0154\n","Epoch 95/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0044 - val_accuracy: 1.0000 - val_loss: 0.0152\n","Epoch 96/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0031 - val_accuracy: 1.0000 - val_loss: 0.0154\n","Epoch 97/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0027 - val_accuracy: 1.0000 - val_loss: 0.0152\n","Epoch 98/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0034 - val_accuracy: 1.0000 - val_loss: 0.0149\n","Epoch 99/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0028 - val_accuracy: 1.0000 - val_loss: 0.0146\n","Epoch 100/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0032 - val_accuracy: 1.0000 - val_loss: 0.0143\n","Epoch 101/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0030 - val_accuracy: 1.0000 - val_loss: 0.0148\n","Epoch 102/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0027 - val_accuracy: 1.0000 - val_loss: 0.0135\n","Epoch 103/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0032 - val_accuracy: 1.0000 - val_loss: 0.0138\n","Epoch 104/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0027 - val_accuracy: 1.0000 - val_loss: 0.0140\n","Epoch 105/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0021 - val_accuracy: 1.0000 - val_loss: 0.0135\n","Epoch 106/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0024 - val_accuracy: 1.0000 - val_loss: 0.0133\n","Epoch 107/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0021 - val_accuracy: 1.0000 - val_loss: 0.0143\n","Epoch 108/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0027 - val_accuracy: 1.0000 - val_loss: 0.0136\n","Epoch 109/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0022 - val_accuracy: 1.0000 - val_loss: 0.0135\n","Epoch 110/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0020 - val_accuracy: 1.0000 - val_loss: 0.0133\n","Epoch 111/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0026 - val_accuracy: 1.0000 - val_loss: 0.0132\n","Epoch 112/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0022 - val_accuracy: 1.0000 - val_loss: 0.0127\n","Epoch 113/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0024 - val_accuracy: 1.0000 - val_loss: 0.0131\n","Epoch 114/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0022 - val_accuracy: 1.0000 - val_loss: 0.0122\n","Epoch 115/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0018 - val_accuracy: 1.0000 - val_loss: 0.0124\n","Epoch 116/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0017 - val_accuracy: 1.0000 - val_loss: 0.0132\n","Epoch 117/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0021 - val_accuracy: 1.0000 - val_loss: 0.0124\n","Epoch 118/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0020 - val_accuracy: 1.0000 - val_loss: 0.0126\n","Epoch 119/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0020 - val_accuracy: 1.0000 - val_loss: 0.0124\n","Epoch 120/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0021 - val_accuracy: 1.0000 - val_loss: 0.0125\n","Epoch 121/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0021 - val_accuracy: 1.0000 - val_loss: 0.0119\n","Epoch 122/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0021 - val_accuracy: 1.0000 - val_loss: 0.0119\n","Epoch 123/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0020 - val_accuracy: 1.0000 - val_loss: 0.0119\n","Epoch 124/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 0.0015 - val_accuracy: 1.0000 - val_loss: 0.0122\n","Epoch 125/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0017 - val_accuracy: 1.0000 - val_loss: 0.0114\n","Epoch 126/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0013 - val_accuracy: 1.0000 - val_loss: 0.0120\n","Epoch 127/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0019 - val_accuracy: 1.0000 - val_loss: 0.0116\n","Epoch 128/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0011 - val_accuracy: 1.0000 - val_loss: 0.0115\n","Epoch 129/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0019 - val_accuracy: 1.0000 - val_loss: 0.0114\n","Epoch 130/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0014 - val_accuracy: 1.0000 - val_loss: 0.0108\n","Epoch 131/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 1.0000 - loss: 0.0014 - val_accuracy: 1.0000 - val_loss: 0.0114\n","Epoch 132/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0114\n","Epoch 133/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 0.0010 - val_accuracy: 1.0000 - val_loss: 0.0110\n","Epoch 134/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 1.0000 - loss: 0.0011 - val_accuracy: 1.0000 - val_loss: 0.0114\n","Epoch 135/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0106\n","Epoch 136/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 9.9049e-04 - val_accuracy: 1.0000 - val_loss: 0.0106\n","Epoch 137/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0108\n","Epoch 138/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0011 - val_accuracy: 1.0000 - val_loss: 0.0105\n","Epoch 139/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0103\n","Epoch 140/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0106\n","Epoch 141/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0013 - val_accuracy: 1.0000 - val_loss: 0.0105\n","Epoch 142/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 9.5310e-04 - val_accuracy: 1.0000 - val_loss: 0.0100\n","Epoch 143/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0104\n","Epoch 144/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0012 - val_accuracy: 1.0000 - val_loss: 0.0100\n","Epoch 145/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 9.2345e-04 - val_accuracy: 1.0000 - val_loss: 0.0100\n","Epoch 146/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 8.0637e-04 - val_accuracy: 1.0000 - val_loss: 0.0100\n","Epoch 147/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 5.9459e-04 - val_accuracy: 1.0000 - val_loss: 0.0100\n","Epoch 148/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0010 - val_accuracy: 1.0000 - val_loss: 0.0097\n","Epoch 149/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 0.0010 - val_accuracy: 1.0000 - val_loss: 0.0101\n","Epoch 150/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 9.6175e-04 - val_accuracy: 1.0000 - val_loss: 0.0095\n","Epoch 151/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 9.2553e-04 - val_accuracy: 1.0000 - val_loss: 0.0098\n","Epoch 152/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 9.9976e-04 - val_accuracy: 1.0000 - val_loss: 0.0099\n","Epoch 153/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 0.0010 - val_accuracy: 1.0000 - val_loss: 0.0096\n","Epoch 154/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.4029e-04 - val_accuracy: 1.0000 - val_loss: 0.0093\n","Epoch 155/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 8.2213e-04 - val_accuracy: 1.0000 - val_loss: 0.0099\n","Epoch 156/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.7773e-04 - val_accuracy: 1.0000 - val_loss: 0.0095\n","Epoch 157/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.5918e-04 - val_accuracy: 1.0000 - val_loss: 0.0097\n","Epoch 158/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 8.3179e-04 - val_accuracy: 1.0000 - val_loss: 0.0091\n","Epoch 159/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.8005e-04 - val_accuracy: 1.0000 - val_loss: 0.0094\n","Epoch 160/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 7.5997e-04 - val_accuracy: 1.0000 - val_loss: 0.0089\n","Epoch 161/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 9.1908e-04 - val_accuracy: 1.0000 - val_loss: 0.0093\n","Epoch 162/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 5.0952e-04 - val_accuracy: 1.0000 - val_loss: 0.0090\n","Epoch 163/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.9862e-04 - val_accuracy: 1.0000 - val_loss: 0.0092\n","Epoch 164/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.0921e-04 - val_accuracy: 1.0000 - val_loss: 0.0091\n","Epoch 165/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 8.2472e-04 - val_accuracy: 1.0000 - val_loss: 0.0091\n","Epoch 166/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 6.2427e-04 - val_accuracy: 1.0000 - val_loss: 0.0090\n","Epoch 167/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.6270e-04 - val_accuracy: 1.0000 - val_loss: 0.0086\n","Epoch 168/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.4219e-04 - val_accuracy: 1.0000 - val_loss: 0.0088\n","Epoch 169/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 7.2871e-04 - val_accuracy: 1.0000 - val_loss: 0.0087\n","Epoch 170/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 6.4540e-04 - val_accuracy: 1.0000 - val_loss: 0.0084\n","Epoch 171/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 5.4455e-04 - val_accuracy: 1.0000 - val_loss: 0.0088\n","Epoch 172/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 5.8800e-04 - val_accuracy: 1.0000 - val_loss: 0.0087\n","Epoch 173/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 5.7942e-04 - val_accuracy: 1.0000 - val_loss: 0.0082\n","Epoch 174/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 5.7892e-04 - val_accuracy: 1.0000 - val_loss: 0.0087\n","Epoch 175/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 7.5125e-04 - val_accuracy: 1.0000 - val_loss: 0.0086\n","Epoch 176/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.5960e-04 - val_accuracy: 1.0000 - val_loss: 0.0086\n","Epoch 177/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 6.2330e-04 - val_accuracy: 1.0000 - val_loss: 0.0084\n","Epoch 178/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 5.2502e-04 - val_accuracy: 1.0000 - val_loss: 0.0083\n","Epoch 179/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 5.8913e-04 - val_accuracy: 1.0000 - val_loss: 0.0084\n","Epoch 180/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 5.1556e-04 - val_accuracy: 1.0000 - val_loss: 0.0082\n","Epoch 181/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 5.5822e-04 - val_accuracy: 1.0000 - val_loss: 0.0085\n","Epoch 182/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 5.0650e-04 - val_accuracy: 1.0000 - val_loss: 0.0079\n","Epoch 183/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 6.4239e-04 - val_accuracy: 1.0000 - val_loss: 0.0079\n","Epoch 184/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 1.0000 - loss: 4.6129e-04 - val_accuracy: 1.0000 - val_loss: 0.0079\n","Epoch 185/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - accuracy: 1.0000 - loss: 4.4264e-04 - val_accuracy: 1.0000 - val_loss: 0.0081\n","Epoch 186/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - accuracy: 1.0000 - loss: 4.4162e-04 - val_accuracy: 1.0000 - val_loss: 0.0082\n","Epoch 187/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 4.6771e-04 - val_accuracy: 1.0000 - val_loss: 0.0081\n","Epoch 188/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 5.1580e-04 - val_accuracy: 1.0000 - val_loss: 0.0076\n","Epoch 189/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 4.1802e-04 - val_accuracy: 1.0000 - val_loss: 0.0078\n","Epoch 190/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 4.3474e-04 - val_accuracy: 1.0000 - val_loss: 0.0076\n","Epoch 191/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 4.2575e-04 - val_accuracy: 1.0000 - val_loss: 0.0079\n","Epoch 192/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 3.6373e-04 - val_accuracy: 1.0000 - val_loss: 0.0076\n","Epoch 193/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 1.0000 - loss: 4.1577e-04 - val_accuracy: 1.0000 - val_loss: 0.0078\n","Epoch 194/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 3.3706e-04 - val_accuracy: 1.0000 - val_loss: 0.0079\n","Epoch 195/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 1.0000 - loss: 3.3319e-04 - val_accuracy: 1.0000 - val_loss: 0.0077\n","Epoch 196/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 3.8974e-04 - val_accuracy: 1.0000 - val_loss: 0.0079\n","Epoch 197/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 3.2689e-04 - val_accuracy: 1.0000 - val_loss: 0.0077\n","Epoch 198/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 3.9424e-04 - val_accuracy: 1.0000 - val_loss: 0.0075\n","Epoch 199/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 1.0000 - loss: 3.9884e-04 - val_accuracy: 1.0000 - val_loss: 0.0074\n","Epoch 200/200\n","\u001b[1m23/23\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - accuracy: 1.0000 - loss: 3.8889e-04 - val_accuracy: 1.0000 - val_loss: 0.0074\n","Elapsed time: 47.22 seconds\n"]}]},{"cell_type":"code","source":["\n","y_pred3 = classifier3.predict(X_test3)\n","\n","y_pred3 = np.argmax(y_pred3, axis=1)\n","\n","from sklearn.metrics import accuracy_score\n","accuracy3 = accuracy_score(y_test3, y_pred3)\n","print(\"Accuracy of the model:\", accuracy3)\n"],"metadata":{"id":"ZWExEBV9ZQ2p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1723737524211,"user_tz":-360,"elapsed":1157,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"b6de1f89-0e3b-4d6b-d877-83d163f908f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m6/6\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step\n","Accuracy of the model: 1.0\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(y_test3, y_pred3, target_names=column_mapping3.values()))"],"metadata":{"id":"sknnRSlhPd56","executionInfo":{"status":"ok","timestamp":1723737524211,"user_tz":-360,"elapsed":20,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d36757be-3e59-48ae-d012-235e12c54b02"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","    DownLeft       1.00      1.00      1.00        64\n","        Left       1.00      1.00      1.00        62\n","      UpLeft       1.00      1.00      1.00        54\n","\n","    accuracy                           1.00       180\n","   macro avg       1.00      1.00      1.00       180\n","weighted avg       1.00      1.00      1.00       180\n","\n"]}]},{"cell_type":"code","source":["\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n","\n","accuracy = accuracy_score(y_test3, y_pred3)\n","precision = precision_score(y_test3, y_pred3, average='weighted')\n","recall = recall_score(y_test3, y_pred3, average='weighted')\n","f1 = f1_score(y_test3, y_pred3, average='weighted')\n","\n","print(\"Accuracy:\", accuracy)\n","print(\"Precision:\", precision)\n","print(\"Recall:\", recall)\n","print(\"F1-score:\", f1)\n"],"metadata":{"id":"NeXK6G6awoqU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","validation_data = data.sample(frac=0.2, random_state=32)\n","\n","start_time = time.time()\n","y_pred_validation = classifier3.predict(validation_data.drop('Label', axis=1))\n","end_time = time.time()\n","validation_time = end_time - start_time\n","print(\"Validation time: {:.2f} seconds\".format(validation_time))\n"],"metadata":{"id":"S7zPxtZC23_G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1723737524212,"user_tz":-360,"elapsed":16,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"eb719c4a-5dfc-406a-b523-034413b67acb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step \n","Validation time: 0.16 seconds\n"]}]},{"cell_type":"code","source":["validation_data.shape"],"metadata":{"id":"WjZPbUYshLiz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1723737524212,"user_tz":-360,"elapsed":12,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"outputId":"81da269c-c046-43f0-af61-8dbc76e08151"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(540, 15)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["plt.figure(figsize=(20, 5))\n","plt.plot(history_cnn.history['val_loss'])\n","plt.title('Epoch vs Validation Loss')\n","plt.ylabel('Validation Loss')\n","plt.xlabel('Epoch')\n","plt.show()\n"],"metadata":{"id":"z8NAAwTcRngv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# classifier3.save('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Models/Two Channel/oversample/ANN3.h5')"],"metadata":{"id":"JdnZprQHl9v_","executionInfo":{"status":"ok","timestamp":1723737559797,"user_tz":-360,"elapsed":5,"user":{"displayName":"Wakim Sajjad","userId":"09476343385685823005"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"cd81672b-2cdb-47fb-e832-317e7f9869d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]}]},{"cell_type":"code","source":["# Save the scalers\n","# with open('/content/drive/MyDrive/machine learning/EOG/1_Conf and journal/_Main_Project_/Test/Models/Two Channel/oversample/scl_ANN3.pkl', 'wb') as f:\n","#     pickle.dump(sc3, f)"],"metadata":{"id":"TJETgLq9eJJT","executionInfo":{"status":"ok","timestamp":1756707127927,"user_tz":-360,"elapsed":5,"user":{"displayName":"Wakim Sajjad Sakib","userId":"09476343385685823005"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"QbO4pIyihtxR"},"execution_count":null,"outputs":[]}]}